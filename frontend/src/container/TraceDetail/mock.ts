const data = [{"columns":["__time","SpanId","TraceId","ServiceName","Name","Kind","DurationNano","TagsKeys","TagsValues","References","Events","HasError"],"events":[[1658241926249,"fba3d4308b2c7fa2","4e28dd6074aff60b3f9b103396c77d71","bbhoarde-staging","gql",2,10775247831,["http.method","service.name","telemetry.sdk.language","telemetry.sdk.version","net.peer.port","telemetry.sdk.name","hosting.provider","http.route","http.status_code","http.target","http.user_agent","net.peer.ip","http.flavor","net.host.port","http.host","http.scheme","http.server_name","telemetry.auto.version"],["POST","bbhoarde-staging","python","1.11.1","29759","opentelemetry","heroku","gql","200","/gql","Mozilla/5.0 (Windows NT 10.0; rv:102.0) Gecko/20100101 Firefox/102.0","10.1.23.97","1.1","31282","bbhoarde-staging.herokuapp.com","http","waitress.invalid","0.30b1"],["{TraceId=4e28dd6074aff60b3f9b103396c77d71, SpanId=, RefType=CHILD_OF}"],null,false],[1658241926249,"cc7d39c1042e86db","4e28dd6074aff60b3f9b103396c77d71","bbhoarde-staging","trace-middleware",1,10767439664,["service.name","telemetry.auto.version","user","schema","sql_count","telemetry.sdk.language","telemetry.sdk.name","telemetry.sdk.version","hosting.provider"],["bbhoarde-staging","0.30b1","Unchecked","schema {\n  query: Query\n  mutation: Mutations\n}\n\ninput AcceptChangesToAdImagesInput {\n  adImages: [ID]!\n  clientMutationId: String\n}\n\ntype AcceptChangesToAdImagesPayload {\n  adImages: [AdImageNode]\n  clientMutationId: String\n}\n\ninput AcceptContractInput {\n  id: ID!\n  paymentType: String!\n  envelopeId: String!\n  clientMutationId: String\n}\n\ntype AcceptContractPayload {\n  message: MessageNode\n  clientMutationId: String\n}\n\ntype AdGroupNode {\n  name: String\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  id: ID!\n  ads(before: String, after: String, first: Int, last: Int, orgId: ID!): AdNodeConnection\n  organization: OrganizationNode\n}\n\ntype AdImageNode implements IdNode {\n  ad: AdNode\n  filename: String\n  width: Int!\n  height: Int!\n  processed: DateTime\n  verified: DateTime\n  rejectionMessage: String\n  id: ID!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  url: String\n  thumbnailUrl: String\n  changes: ImageChanges\n  purpose: ImagePurpose\n  video: Boolean\n  created: DateTime\n  modified: DateTime\n  status: AdImageStatus\n  rejectionCause: RejectionCause\n  modded: DateTime\n  modResponse: ApprovalStatus\n}\n\ntype AdImageNodeConnection {\n  pageInfo: PageInfo!\n  edges: [AdImageNodeEdge]!\n  totalCount: Int!\n}\n\ntype AdImageNodeEdge {\n  node: AdImageNode\n  cursor: String!\n}\n\nenum AdImageStatus {\n  UPLOAD_PENDING\n  UPLOADED\n  PROCESSED\n  MODERATED\n  REJECTED\n  DELETED\n}\n\ntype AdNode implements IdNode {\n  name: String\n  id: ID!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  created: DateTime\n  modified: DateTime\n  organizationId: ID!\n  organization: OrganizationNode\n  images(before: String, after: String, first: Int, last: Int, orgId: ID, verified: Boolean, processed: Boolean): AdImageNodeConnection\n}\n\ntype AdNodeConnection {\n  pageInfo: PageInfo!\n  edges: [AdNodeEdge]!\n  totalCount: Int!\n}\n\ntype AdNodeEdge {\n  node: AdNode\n  cursor: String!\n}\n\nscalar Any\n\nenum ApprovalStatus {\n  UNUSED\n  REQUESTED\n  REJECTED\n  APPROVED\n  PARTIALLY_APPROVED\n  PENDING_EXTERNAL\n  WITHDRAWN\n}\n\ntype ArtworkReview {\n  url: String!\n  approved: Boolean\n  note: String\n}\n\ninput ArtworkReviewInput {\n  url: String!\n  approved: Boolean\n  note: String\n}\n\ninput AssignmentInput {\n  name: String!\n  start: DateTime!\n  end: DateTime!\n  usedPercent: Int!\n  preemptable: Int\n  color: String\n  reference: String\n}\n\ntype AssignmentNode implements IdNode {\n  id: ID!\n  start: DateTime!\n  end: DateTime!\n  name: String!\n  reference: String\n  usedPercent: Int!\n  preemptable: Int!\n  color: String!\n  url: String\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  unit: UnitNode\n}\n\ntype AssignmentNodeConnection {\n  pageInfo: PageInfo!\n  edges: [AssignmentNodeEdge]!\n  totalCount: Int!\n}\n\ntype AssignmentNodeEdge {\n  node: AssignmentNode\n  cursor: String!\n}\n\ntype AssignmentSearch {\n  assignments: [AssignmentType]\n  pagination: PaginationResultType\n}\n\ninput AssignmentSearchParameters {\n  id: String\n  unit: String\n}\n\ntype AssignmentType {\n  realId: Int\n  id: String\n  name: String\n  reference: String\n  start: DateTime\n  end: DateTime\n  unit: UnitType\n  usedPercent: Int\n  color: String\n  url: String\n}\n\ntype AvailabilityDate {\n  start: DateTime!\n  end: DateTime!\n}\n\ninput AvailabilityInputType {\n  start: DateTime!\n  end: DateTime!\n}\n\ntype AvailabilityNode {\n  unitId: String!\n  unit: UnitNode\n  status: String!\n  partial: [AvailabilityDate]!\n}\n\ntype CampaignDayData {\n  day: Date\n  blips: Int\n  spent: Float\n}\n\ntype CampaignIssue {\n  issueType: CampaignIssueType!\n  message: String!\n}\n\nenum CampaignIssueType {\n  DISABLED\n  PENDING_START\n  ENDED\n  INSUFFICIENT_FUNDS\n  SPEND_LIMIT_REACHED\n  PENDING_VERIFICATIONS\n  NO_UNITS_SELECTED\n  ALL_UNITS_DISABLED\n  ALL_UNITS_BOOKED\n  NO_CREATIVES_APPROVED\n  UNKNOWN\n}\n\ntype CampaignNode implements IdNode {\n  deleted: DateTime\n  created: DateTime!\n  modified: DateTime!\n  id: ID!\n  name: String!\n  enabled: Boolean!\n  maxPrice: Float\n  dailyBudget: Float\n  startDate: Date\n  endDate: Date\n  firstDisplay: DateTime\n  timezone: CampaignTimezone!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  stats(start: Date, end: Date): CampaignStats!\n  units(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n  campaignType: CampaignType\n  schedule: [[Float]]\n  adGroup: AdGroupNode\n  checklist: Checklist!\n}\n\ntype CampaignNodeConnection {\n  pageInfo: PageInfo!\n  edges: [CampaignNodeEdge]!\n  totalCount: Int!\n}\n\ntype CampaignNodeEdge {\n  node: CampaignNode\n  cursor: String!\n}\n\ntype CampaignStats {\n  spent: Float!\n  days: [CampaignDayData]\n}\n\nenum CampaignTimezone {\n  AFRICA_ABIDJAN\n  AFRICA_ACCRA\n  AFRICA_ADDIS_ABABA\n  AFRICA_ALGIERS\n  AFRICA_ASMARA\n  AFRICA_ASMERA\n  AFRICA_BAMAKO\n  AFRICA_BANGUI\n  AFRICA_BANJUL\n  AFRICA_BISSAU\n  AFRICA_BLANTYRE\n  AFRICA_BRAZZAVILLE\n  AFRICA_BUJUMBURA\n  AFRICA_CAIRO\n  AFRICA_CASABLANCA\n  AFRICA_CEUTA\n  AFRICA_CONAKRY\n  AFRICA_DAKAR\n  AFRICA_DAR_ES_SALAAM\n  AFRICA_DJIBOUTI\n  AFRICA_DOUALA\n  AFRICA_EL_AAIUN\n  AFRICA_FREETOWN\n  AFRICA_GABORONE\n  AFRICA_HARARE\n  AFRICA_JOHANNESBURG\n  AFRICA_JUBA\n  AFRICA_KAMPALA\n  AFRICA_KHARTOUM\n  AFRICA_KIGALI\n  AFRICA_KINSHASA\n  AFRICA_LAGOS\n  AFRICA_LIBREVILLE\n  AFRICA_LOME\n  AFRICA_LUANDA\n  AFRICA_LUBUMBASHI\n  AFRICA_LUSAKA\n  AFRICA_MALABO\n  AFRICA_MAPUTO\n  AFRICA_MASERU\n  AFRICA_MBABANE\n  AFRICA_MOGADISHU\n  AFRICA_MONROVIA\n  AFRICA_NAIROBI\n  AFRICA_NDJAMENA\n  AFRICA_NIAMEY\n  AFRICA_NOUAKCHOTT\n  AFRICA_OUAGADOUGOU\n  AFRICA_PORTO_NOVO\n  AFRICA_SAO_TOME\n  AFRICA_TIMBUKTU\n  AFRICA_TRIPOLI\n  AFRICA_TUNIS\n  AFRICA_WINDHOEK\n  AMERICA_ADAK\n  AMERICA_ANCHORAGE\n  AMERICA_ANGUILLA\n  AMERICA_ANTIGUA\n  AMERICA_ARAGUAINA\n  AMERICA_ARGENTINA_BUENOS_AIRES\n  AMERICA_ARGENTINA_CATAMARCA\n  AMERICA_ARGENTINA_COMODRIVADAVIA\n  AMERICA_ARGENTINA_CORDOBA\n  AMERICA_ARGENTINA_JUJUY\n  AMERICA_ARGENTINA_LA_RIOJA\n  AMERICA_ARGENTINA_MENDOZA\n  AMERICA_ARGENTINA_RIO_GALLEGOS\n  AMERICA_ARGENTINA_SALTA\n  AMERICA_ARGENTINA_SAN_JUAN\n  AMERICA_ARGENTINA_SAN_LUIS\n  AMERICA_ARGENTINA_TUCUMAN\n  AMERICA_ARGENTINA_USHUAIA\n  AMERICA_ARUBA\n  AMERICA_ASUNCION\n  AMERICA_ATIKOKAN\n  AMERICA_ATKA\n  AMERICA_BAHIA\n  AMERICA_BAHIA_BANDERAS\n  AMERICA_BARBADOS\n  AMERICA_BELEM\n  AMERICA_BELIZE\n  AMERICA_BLANC_SABLON\n  AMERICA_BOA_VISTA\n  AMERICA_BOGOTA\n  AMERICA_BOISE\n  AMERICA_BUENOS_AIRES\n  AMERICA_CAMBRIDGE_BAY\n  AMERICA_CAMPO_GRANDE\n  AMERICA_CANCUN\n  AMERICA_CARACAS\n  AMERICA_CATAMARCA\n  AMERICA_CAYENNE\n  AMERICA_CAYMAN\n  AMERICA_CHICAGO\n  AMERICA_CHIHUAHUA\n  AMERICA_CORAL_HARBOUR\n  AMERICA_CORDOBA\n  AMERICA_COSTA_RICA\n  AMERICA_CRESTON\n  AMERICA_CUIABA\n  AMERICA_CURACAO\n  AMERICA_DANMARKSHAVN\n  AMERICA_DAWSON\n  AMERICA_DAWSON_CREEK\n  AMERICA_DENVER\n  AMERICA_DETROIT\n  AMERICA_DOMINICA\n  AMERICA_EDMONTON\n  AMERICA_EIRUNEPE\n  AMERICA_EL_SALVADOR\n  AMERICA_ENSENADA\n  AMERICA_FORT_NELSON\n  AMERICA_FORT_WAYNE\n  AMERICA_FORTALEZA\n  AMERICA_GLACE_BAY\n  AMERICA_GODTHAB\n  AMERICA_GOOSE_BAY\n  AMERICA_GRAND_TURK\n  AMERICA_GRENADA\n  AMERICA_GUADELOUPE\n  AMERICA_GUATEMALA\n  AMERICA_GUAYAQUIL\n  AMERICA_GUYANA\n  AMERICA_HALIFAX\n  AMERICA_HAVANA\n  AMERICA_HERMOSILLO\n  AMERICA_INDIANA_INDIANAPOLIS\n  AMERICA_INDIANA_KNOX\n  AMERICA_INDIANA_MARENGO\n  AMERICA_INDIANA_PETERSBURG\n  AMERICA_INDIANA_TELL_CITY\n  AMERICA_INDIANA_VEVAY\n  AMERICA_INDIANA_VINCENNES\n  AMERICA_INDIANA_WINAMAC\n  AMERICA_INDIANAPOLIS\n  AMERICA_INUVIK\n  AMERICA_IQALUIT\n  AMERICA_JAMAICA\n  AMERICA_JUJUY\n  AMERICA_JUNEAU\n  AMERICA_KENTUCKY_LOUISVILLE\n  AMERICA_KENTUCKY_MONTICELLO\n  AMERICA_KNOX_IN\n  AMERICA_KRALENDIJK\n  AMERICA_LA_PAZ\n  AMERICA_LIMA\n  AMERICA_LOS_ANGELES\n  AMERICA_LOUISVILLE\n  AMERICA_LOWER_PRINCES\n  AMERICA_MACEIO\n  AMERICA_MANAGUA\n  AMERICA_MANAUS\n  AMERICA_MARIGOT\n  AMERICA_MARTINIQUE\n  AMERICA_MATAMOROS\n  AMERICA_MAZATLAN\n  AMERICA_MENDOZA\n  AMERICA_MENOMINEE\n  AMERICA_MERIDA\n  AMERICA_METLAKATLA\n  AMERICA_MEXICO_CITY\n  AMERICA_MIQUELON\n  AMERICA_MONCTON\n  AMERICA_MONTERREY\n  AMERICA_MONTEVIDEO\n  AMERICA_MONTREAL\n  AMERICA_MONTSERRAT\n  AMERICA_NASSAU\n  AMERICA_NEW_YORK\n  AMERICA_NIPIGON\n  AMERICA_NOME\n  AMERICA_NORONHA\n  AMERICA_NORTH_DAKOTA_BEULAH\n  AMERICA_NORTH_DAKOTA_CENTER\n  AMERICA_NORTH_DAKOTA_NEW_SALEM\n  AMERICA_NUUK\n  AMERICA_OJINAGA\n  AMERICA_PANAMA\n  AMERICA_PANGNIRTUNG\n  AMERICA_PARAMARIBO\n  AMERICA_PHOENIX\n  AMERICA_PORT_AU_PRINCE\n  AMERICA_PORT_OF_SPAIN\n  AMERICA_PORTO_ACRE\n  AMERICA_PORTO_VELHO\n  AMERICA_PUERTO_RICO\n  AMERICA_PUNTA_ARENAS\n  AMERICA_RAINY_RIVER\n  AMERICA_RANKIN_INLET\n  AMERICA_RECIFE\n  AMERICA_REGINA\n  AMERICA_RESOLUTE\n  AMERICA_RIO_BRANCO\n  AMERICA_ROSARIO\n  AMERICA_SANTA_ISABEL\n  AMERICA_SANTAREM\n  AMERICA_SANTIAGO\n  AMERICA_SANTO_DOMINGO\n  AMERICA_SAO_PAULO\n  AMERICA_SCORESBYSUND\n  AMERICA_SHIPROCK\n  AMERICA_SITKA\n  AMERICA_ST_BARTHELEMY\n  AMERICA_ST_JOHNS\n  AMERICA_ST_KITTS\n  AMERICA_ST_LUCIA\n  AMERICA_ST_THOMAS\n  AMERICA_ST_VINCENT\n  AMERICA_SWIFT_CURRENT\n  AMERICA_TEGUCIGALPA\n  AMERICA_THULE\n  AMERICA_THUNDER_BAY\n  AMERICA_TIJUANA\n  AMERICA_TORONTO\n  AMERICA_TORTOLA\n  AMERICA_VANCOUVER\n  AMERICA_VIRGIN\n  AMERICA_WHITEHORSE\n  AMERICA_WINNIPEG\n  AMERICA_YAKUTAT\n  AMERICA_YELLOWKNIFE\n  ANTARCTICA_CASEY\n  ANTARCTICA_DAVIS\n  ANTARCTICA_DUMONTDURVILLE\n  ANTARCTICA_MACQUARIE\n  ANTARCTICA_MAWSON\n  ANTARCTICA_MCMURDO\n  ANTARCTICA_PALMER\n  ANTARCTICA_ROTHERA\n  ANTARCTICA_SOUTH_POLE\n  ANTARCTICA_SYOWA\n  ANTARCTICA_TROLL\n  ANTARCTICA_VOSTOK\n  ARCTIC_LONGYEARBYEN\n  ASIA_ADEN\n  ASIA_ALMATY\n  ASIA_AMMAN\n  ASIA_ANADYR\n  ASIA_AQTAU\n  ASIA_AQTOBE\n  ASIA_ASHGABAT\n  ASIA_ASHKHABAD\n  ASIA_ATYRAU\n  ASIA_BAGHDAD\n  ASIA_BAHRAIN\n  ASIA_BAKU\n  ASIA_BANGKOK\n  ASIA_BARNAUL\n  ASIA_BEIRUT\n  ASIA_BISHKEK\n  ASIA_BRUNEI\n  ASIA_CALCUTTA\n  ASIA_CHITA\n  ASIA_CHOIBALSAN\n  ASIA_CHONGQING\n  ASIA_CHUNGKING\n  ASIA_COLOMBO\n  ASIA_DACCA\n  ASIA_DAMASCUS\n  ASIA_DHAKA\n  ASIA_DILI\n  ASIA_DUBAI\n  ASIA_DUSHANBE\n  ASIA_FAMAGUSTA\n  ASIA_GAZA\n  ASIA_HARBIN\n  ASIA_HEBRON\n  ASIA_HO_CHI_MINH\n  ASIA_HONG_KONG\n  ASIA_HOVD\n  ASIA_IRKUTSK\n  ASIA_ISTANBUL\n  ASIA_JAKARTA\n  ASIA_JAYAPURA\n  ASIA_JERUSALEM\n  ASIA_KABUL\n  ASIA_KAMCHATKA\n  ASIA_KARACHI\n  ASIA_KASHGAR\n  ASIA_KATHMANDU\n  ASIA_KATMANDU\n  ASIA_KHANDYGA\n  ASIA_KOLKATA\n  ASIA_KRASNOYARSK\n  ASIA_KUALA_LUMPUR\n  ASIA_KUCHING\n  ASIA_KUWAIT\n  ASIA_MACAO\n  ASIA_MACAU\n  ASIA_MAGADAN\n  ASIA_MAKASSAR\n  ASIA_MANILA\n  ASIA_MUSCAT\n  ASIA_NICOSIA\n  ASIA_NOVOKUZNETSK\n  ASIA_NOVOSIBIRSK\n  ASIA_OMSK\n  ASIA_ORAL\n  ASIA_PHNOM_PENH\n  ASIA_PONTIANAK\n  ASIA_PYONGYANG\n  ASIA_QATAR\n  ASIA_QOSTANAY\n  ASIA_QYZYLORDA\n  ASIA_RANGOON\n  ASIA_RIYADH\n  ASIA_SAIGON\n  ASIA_SAKHALIN\n  ASIA_SAMARKAND\n  ASIA_SEOUL\n  ASIA_SHANGHAI\n  ASIA_SINGAPORE\n  ASIA_SREDNEKOLYMSK\n  ASIA_TAIPEI\n  ASIA_TASHKENT\n  ASIA_TBILISI\n  ASIA_TEHRAN\n  ASIA_TEL_AVIV\n  ASIA_THIMBU\n  ASIA_THIMPHU\n  ASIA_TOKYO\n  ASIA_TOMSK\n  ASIA_UJUNG_PANDANG\n  ASIA_ULAANBAATAR\n  ASIA_ULAN_BATOR\n  ASIA_URUMQI\n  ASIA_UST_NERA\n  ASIA_VIENTIANE\n  ASIA_VLADIVOSTOK\n  ASIA_YAKUTSK\n  ASIA_YANGON\n  ASIA_YEKATERINBURG\n  ASIA_YEREVAN\n  ATLANTIC_AZORES\n  ATLANTIC_BERMUDA\n  ATLANTIC_CANARY\n  ATLANTIC_CAPE_VERDE\n  ATLANTIC_FAEROE\n  ATLANTIC_FAROE\n  ATLANTIC_JAN_MAYEN\n  ATLANTIC_MADEIRA\n  ATLANTIC_REYKJAVIK\n  ATLANTIC_SOUTH_GEORGIA\n  ATLANTIC_ST_HELENA\n  ATLANTIC_STANLEY\n  AUSTRALIA_ACT\n  AUSTRALIA_ADELAIDE\n  AUSTRALIA_BRISBANE\n  AUSTRALIA_BROKEN_HILL\n  AUSTRALIA_CANBERRA\n  AUSTRALIA_CURRIE\n  AUSTRALIA_DARWIN\n  AUSTRALIA_EUCLA\n  AUSTRALIA_HOBART\n  AUSTRALIA_LHI\n  AUSTRALIA_LINDEMAN\n  AUSTRALIA_LORD_HOWE\n  AUSTRALIA_MELBOURNE\n  AUSTRALIA_NSW\n  AUSTRALIA_NORTH\n  AUSTRALIA_PERTH\n  AUSTRALIA_QUEENSLAND\n  AUSTRALIA_SOUTH\n  AUSTRALIA_SYDNEY\n  AUSTRALIA_TASMANIA\n  AUSTRALIA_VICTORIA\n  AUSTRALIA_WEST\n  AUSTRALIA_YANCOWINNA\n  BRAZIL_ACRE\n  BRAZIL_DENORONHA\n  BRAZIL_EAST\n  BRAZIL_WEST\n  CET\n  CST6CDT\n  CANADA_ATLANTIC\n  CANADA_CENTRAL\n  CANADA_EASTERN\n  CANADA_MOUNTAIN\n  CANADA_NEWFOUNDLAND\n  CANADA_PACIFIC\n  CANADA_SASKATCHEWAN\n  CANADA_YUKON\n  CHILE_CONTINENTAL\n  CHILE_EASTERISLAND\n  CUBA\n  EET\n  EST\n  EST5EDT\n  EGYPT\n  EIRE\n  ETC_GMT\n  ETC_GMT_0\n  ETC_GMT_1\n  ETC_GMT_10\n  ETC_GMT_11\n  ETC_GMT_12\n  ETC_GMT_2\n  ETC_GMT_3\n  ETC_GMT_4\n  ETC_GMT_5\n  ETC_GMT_6\n  ETC_GMT_7\n  ETC_GMT_8\n  ETC_GMT_9\n  ETC_GMT_0_404\n  ETC_GMT_1_405\n  ETC_GMT_10_406\n  ETC_GMT_11_407\n  ETC_GMT_12_408\n  ETC_GMT_13\n  ETC_GMT_14\n  ETC_GMT_2_411\n  ETC_GMT_3_412\n  ETC_GMT_4_413\n  ETC_GMT_5_414\n  ETC_GMT_6_415\n  ETC_GMT_7_416\n  ETC_GMT_8_417\n  ETC_GMT_9_418\n  ETC_GMT0\n  ETC_GREENWICH\n  ETC_UCT\n  ETC_UTC\n  ETC_UNIVERSAL\n  ETC_ZULU\n  EUROPE_AMSTERDAM\n  EUROPE_ANDORRA\n  EUROPE_ASTRAKHAN\n  EUROPE_ATHENS\n  EUROPE_BELFAST\n  EUROPE_BELGRADE\n  EUROPE_BERLIN\n  EUROPE_BRATISLAVA\n  EUROPE_BRUSSELS\n  EUROPE_BUCHAREST\n  EUROPE_BUDAPEST\n  EUROPE_BUSINGEN\n  EUROPE_CHISINAU\n  EUROPE_COPENHAGEN\n  EUROPE_DUBLIN\n  EUROPE_GIBRALTAR\n  EUROPE_GUERNSEY\n  EUROPE_HELSINKI\n  EUROPE_ISLE_OF_MAN\n  EUROPE_ISTANBUL\n  EUROPE_JERSEY\n  EUROPE_KALININGRAD\n  EUROPE_KIEV\n  EUROPE_KIROV\n  EUROPE_LISBON\n  EUROPE_LJUBLJANA\n  EUROPE_LONDON\n  EUROPE_LUXEMBOURG\n  EUROPE_MADRID\n  EUROPE_MALTA\n  EUROPE_MARIEHAMN\n  EUROPE_MINSK\n  EUROPE_MONACO\n  EUROPE_MOSCOW\n  EUROPE_NICOSIA\n  EUROPE_OSLO\n  EUROPE_PARIS\n  EUROPE_PODGORICA\n  EUROPE_PRAGUE\n  EUROPE_RIGA\n  EUROPE_ROME\n  EUROPE_SAMARA\n  EUROPE_SAN_MARINO\n  EUROPE_SARAJEVO\n  EUROPE_SARATOV\n  EUROPE_SIMFEROPOL\n  EUROPE_SKOPJE\n  EUROPE_SOFIA\n  EUROPE_STOCKHOLM\n  EUROPE_TALLINN\n  EUROPE_TIRANE\n  EUROPE_TIRASPOL\n  EUROPE_ULYANOVSK\n  EUROPE_UZHGOROD\n  EUROPE_VADUZ\n  EUROPE_VATICAN\n  EUROPE_VIENNA\n  EUROPE_VILNIUS\n  EUROPE_VOLGOGRAD\n  EUROPE_WARSAW\n  EUROPE_ZAGREB\n  EUROPE_ZAPOROZHYE\n  EUROPE_ZURICH\n  GB\n  GB_EIRE\n  GMT\n  GMT_0\n  GMT_0_492\n  GMT0\n  GREENWICH\n  HST\n  HONGKONG\n  ICELAND\n  INDIAN_ANTANANARIVO\n  INDIAN_CHAGOS\n  INDIAN_CHRISTMAS\n  INDIAN_COCOS\n  INDIAN_COMORO\n  INDIAN_KERGUELEN\n  INDIAN_MAHE\n  INDIAN_MALDIVES\n  INDIAN_MAURITIUS\n  INDIAN_MAYOTTE\n  INDIAN_REUNION\n  IRAN\n  ISRAEL\n  JAMAICA\n  JAPAN\n  KWAJALEIN\n  LIBYA\n  MET\n  MST\n  MST7MDT\n  MEXICO_BAJANORTE\n  MEXICO_BAJASUR\n  MEXICO_GENERAL\n  NZ\n  NZ_CHAT\n  NAVAJO\n  PRC\n  PST8PDT\n  PACIFIC_APIA\n  PACIFIC_AUCKLAND\n  PACIFIC_BOUGAINVILLE\n  PACIFIC_CHATHAM\n  PACIFIC_CHUUK\n  PACIFIC_EASTER\n  PACIFIC_EFATE\n  PACIFIC_ENDERBURY\n  PACIFIC_FAKAOFO\n  PACIFIC_FIJI\n  PACIFIC_FUNAFUTI\n  PACIFIC_GALAPAGOS\n  PACIFIC_GAMBIER\n  PACIFIC_GUADALCANAL\n  PACIFIC_GUAM\n  PACIFIC_HONOLULU\n  PACIFIC_JOHNSTON\n  PACIFIC_KANTON\n  PACIFIC_KIRITIMATI\n  PACIFIC_KOSRAE\n  PACIFIC_KWAJALEIN\n  PACIFIC_MAJURO\n  PACIFIC_MARQUESAS\n  PACIFIC_MIDWAY\n  PACIFIC_NAURU\n  PACIFIC_NIUE\n  PACIFIC_NORFOLK\n  PACIFIC_NOUMEA\n  PACIFIC_PAGO_PAGO\n  PACIFIC_PALAU\n  PACIFIC_PITCAIRN\n  PACIFIC_POHNPEI\n  PACIFIC_PONAPE\n  PACIFIC_PORT_MORESBY\n  PACIFIC_RAROTONGA\n  PACIFIC_SAIPAN\n  PACIFIC_SAMOA\n  PACIFIC_TAHITI\n  PACIFIC_TARAWA\n  PACIFIC_TONGATAPU\n  PACIFIC_TRUK\n  PACIFIC_WAKE\n  PACIFIC_WALLIS\n  PACIFIC_YAP\n  POLAND\n  PORTUGAL\n  ROC\n  ROK\n  SINGAPORE\n  TURKEY\n  UCT\n  US_ALASKA\n  US_ALEUTIAN\n  US_ARIZONA\n  US_CENTRAL\n  US_EAST_INDIANA\n  US_EASTERN\n  US_HAWAII\n  US_INDIANA_STARKE\n  US_MICHIGAN\n  US_MOUNTAIN\n  US_PACIFIC\n  US_SAMOA\n  UTC\n  UNIVERSAL\n  W_SU\n  WET\n  ZULU\n}\n\nenum CampaignType {\n  STANDARD\n  PRESOLD\n  AMBER_ALERT\n  SELF_PROMOTION\n  SYSTEM_TEMPLATE\n  USER_TEMPLATE\n}\n\ntype CampaignUnitStatus {\n  unit: UnitNode\n  approvedAds: [AdNode]\n  rejectedAds: [AdNode]\n  pendingAds: [AdNode]\n}\n\ninput CancelContractInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype CancelContractPayload {\n  message: MessageNode\n  clientMutationId: String\n}\n\ntype Candidate {\n  id: ID!\n  score: Float!\n  unit: UnitNode!\n}\n\ntype CardNode implements IdNode {\n  id: ID!\n  deleted: DateTime\n  created: DateTime!\n  modified: DateTime!\n  organization: OrganizationGrapheneType!\n  preference: Int!\n  successCount: Int!\n  failureCount: Int!\n  expiresMonth: Int!\n  expiresYear: Int!\n  redacted: DateTime\n  lastFailed: DateTime\n  token: String!\n  gateway: String!\n  name: String!\n  lastFailure: String!\n  details: String\n  code: String @deprecated(reason: \"Only used for legacy API\")\n}\n\ntype Checklist {\n  canRun: Boolean!\n  issues: [CampaignIssue]\n  unitStatuses: [CampaignUnitStatus]\n}\n\ntype CodeIdModel {\n  id: ID\n  code: ID\n}\n\ntype ConvertIdModel {\n  gql: ID\n  code: ID\n  db: ID\n  model: String\n}\n\ninput CreateAdImageInput {\n  adId: ID!\n  fileIn: Upload!\n}\n\ninput CreateAdImagesInput {\n  adImages: [CreateAdImageInput]!\n  clientMutationId: String\n}\n\ntype CreateAdImagesPayload {\n  adImages: [AdImageNode]\n  clientMutationId: String\n}\n\ninput CreateAdInput {\n  name: String!\n  organizationId: ID!\n}\n\ninput CreateAdsInput {\n  ads: [CreateAdInput]!\n  clientMutationId: String\n}\n\ntype CreateAdsPayload {\n  ads: [AdNode]\n  clientMutationId: String\n}\n\ntype CreateAssignment {\n  ok: Boolean\n  assignment: AssignmentType\n}\n\ninput CreateAssignmentInput {\n  unitId: ID!\n  name: String!\n  reference: String\n  start: DateTime!\n  end: DateTime!\n  usedPercent: Int!\n  preemptable: Int\n  color: String!\n}\n\ninput CreateAssignmentsInput {\n  assignments: [CreateAssignmentInput]!\n  clientMutationId: String\n}\n\ntype CreateAssignmentsPayload {\n  assignments: [AssignmentNode]\n  clientMutationId: String\n}\n\ninput CreateHoldInput {\n  name: String!\n  start: Date!\n  end: Date!\n  expiration: Date!\n  unitId: ID!\n  proposalId: ID!\n}\n\ninput CreateHoldsInput {\n  holds: [CreateHoldInput]!\n  clientMutationId: String\n}\n\ntype CreateHoldsPayload {\n  holds: [HoldNode]\n  clientMutationId: String\n}\n\ninput CreateMessageInput {\n  proposalId: ID!\n  recipientId: ID!\n  type: String!\n  cc: [String]\n  notes: String\n  parentId: ID\n  avails: MessageAvailsInput\n  holds: [ProposalHoldInput]\n  contracts: [ProposalContractInput]\n  creatives: [MessageCreativeInput]\n  status: String\n}\n\ninput CreateMessagesInput {\n  messages: [CreateMessageInput]!\n  clientMutationId: String\n}\n\ntype CreateMessagesPayload {\n  messages: [MessageNode]\n  clientMutationId: String\n}\n\ninput CreateOrganizationInput {\n  name: String!\n  parentOrgId: ID\n  type: OrgType!\n  political: Boolean = false\n}\n\ninput CreateOrganizationsInput {\n  organizations: [CreateOrganizationInput]!\n  clientMutationId: String\n}\n\ntype CreateOrganizationsPayload {\n  organizations: [OrganizationNode]\n  clientMutationId: String\n}\n\ninput CreateProposalInput {\n  name: String!\n  orgId: ID!\n  start: Date!\n  end: Date!\n  salesRep: ID\n  status: String\n  state: ProposalState\n  description: String\n  agency: String\n  agencyId: ID\n  client: String\n  anonymizeClient: Boolean\n  iconUrl: String\n  unitIds: [ID]\n  location: ID\n  columns: [ProposalColumnInput]\n  sort: [ProposalSortInput]\n  artwork: [ProposalArtworkInput]\n  tasks: [ProposalTaskInput]\n  holds: [ProposalHoldInput]\n  contracts: [ProposalContractInput]\n  dueDate: DateTime\n  dueDateTimezone: String\n  query: JSONString\n  photoSheet: ProposalPhotoSheetInput\n}\n\ninput CreateProposalsInput {\n  proposals: [CreateProposalInput]!\n  clientMutationId: String\n}\n\ntype CreateProposalsPayload {\n  proposals: [ProposalNode]\n  clientMutationId: String\n}\n\ninput CreateStoredQueriesInput {\n  storedQueries: [CreateStoredQueryInput]!\n  clientMutationId: String\n}\n\ntype CreateStoredQueriesPayload {\n  storedQueries: [StoredQueryNode]\n  clientMutationId: String\n}\n\ninput CreateStoredQueryInput {\n  orgId: ID!\n  name: String!\n  distance: Float\n  pointsOfInterest: [StoredQueryPOIInput]\n  postalCodes: [StoredQueryPostalCodeInput]\n  enabled: [String]\n}\n\ninput CreateSubscriptionInput {\n  plan: String!\n  organizationId: ID!\n  amount: Decimal!\n  duration: String!\n}\n\ninput CreateSubscriptionsInput {\n  subscriptions: [CreateSubscriptionInput]!\n  clientMutationId: String\n}\n\ntype CreateSubscriptionsPayload {\n  subscriptions: [SubscriptionNode]\n  clientMutationId: String\n}\n\ninput CreateUnitsInput {\n  clientMutationId: String\n}\n\ntype CreateUnitsPayload {\n  clientMutationId: String\n}\n\ntype DMA implements Node {\n  id: ID!\n  name: String!\n  province: String!\n  county: String!\n  fips: Int\n  postalCodes: [String]!\n}\n\ntype DMAConnection {\n  pageInfo: PageInfo!\n  edges: [DMAEdge]!\n  totalCount: Int!\n}\n\ntype DMAEdge {\n  node: DMA\n  cursor: String!\n}\n\nscalar Date\n\nscalar DateTime\n\ninput DeactivateUserInput {\n  id: ID!\n  clientMutationId: String\n}\n\ntype DeactivateUserPayload {\n  user: UserNode\n  clientMutationId: String\n}\n\ninput DebugHelperInput {\n  method: String!\n  param1: String\n  clientMutationId: String\n}\n\ntype DebugHelperPayload {\n  clientMutationId: String\n}\n\nscalar Decimal\n\ninput DeleteAdImagesInput {\n  adImages: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteAdImagesPayload {\n  adImages: [AdImageNode]\n  clientMutationId: String\n}\n\ninput DeleteAssignmentsInput {\n  assignments: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteAssignmentsPayload {\n  assignments: [AssignmentNode]\n  clientMutationId: String\n}\n\ninput DeleteHoldsInput {\n  holds: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteHoldsPayload {\n  holds: [HoldNode]\n  clientMutationId: String\n}\n\ninput DeleteMessagesInput {\n  messages: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteMessagesPayload {\n  messages: [MessageNode]\n  clientMutationId: String\n}\n\ninput DeleteProposalsInput {\n  proposals: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteProposalsPayload {\n  proposals: [ProposalNode]\n  clientMutationId: String\n}\n\ninput DeleteStoredQueriesInput {\n  storedQueries: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteStoredQueriesPayload {\n  storedQueries: [StoredQueryNode]\n  clientMutationId: String\n}\n\ninput DeleteUnitsInput {\n  units: [ID]!\n  clientMutationId: String\n}\n\ntype DeleteUnitsPayload {\n  units: [UnitNode]\n  clientMutationId: String\n}\n\ntype DigitalSignType implements SignInterface {\n  created: DateTime!\n  id: String\n  height: Int!\n  width: Int!\n  name: String\n  totalSlots: Int!\n  enabled: SignEnabled\n  ordered: Boolean!\n  liveView: String\n  liveViewUsername: String\n  liveViewPassword: String\n  manufacturer: String\n  freezeTime: Time\n  thawTime: Time\n  address: String\n  city: String\n  displayName: String\n  postalCode: String\n  province: String\n  county: String\n  timezone: String\n  boardWidth: Float\n  boardHeight: Float\n  facing: UnitFacing\n  lat: Float!\n  lon: Float!\n  organization: OrganizationGrapheneType\n  read: UnitRead\n  location: String\n  description: String\n  external: Boolean!\n  dailyImpressions: Float\n  inactiveSlots: String\n  flipDuration: Float!\n  macAddress: String\n  audited: Boolean!\n  playerVersion: String\n  platform: SignPlatform!\n  averageDwellTime: Float\n  impressionFrequency: Float\n  uniqueSign: Boolean!\n  uniqueData: String\n  photos: [SignPhotoType]\n  marketplaceName: String\n  realId: Int\n  metrics(what: String!): Float\n  editable: Boolean\n  averageCostPerFlip: Decimal\n  booked: Boolean\n}\n\ntype Dimensions {\n  width: Int\n  height: Int\n}\n\nenum Direction {\n  N\n  NE\n  E\n  SE\n  S\n  SW\n  W\n  NW\n}\n\ntype GeopathCategory implements Node {\n  id: ID!\n  name: String!\n  description: String!\n  source: GeopathSource!\n  subcategories(before: String, after: String, first: Int, last: Int, text: String): GeopathSubcategoryConnection!\n}\n\ntype GeopathCategoryConnection {\n  pageInfo: PageInfo!\n  edges: [GeopathCategoryEdge]!\n}\n\ntype GeopathCategoryEdge {\n  node: GeopathCategory\n  cursor: String!\n}\n\ntype GeopathSegment implements Node {\n  id: ID!\n  name: String!\n  description: String!\n  subcategory: GeopathSubcategory!\n}\n\ntype GeopathSegmentConnection {\n  pageInfo: PageInfo!\n  edges: [GeopathSegmentEdge]!\n}\n\ntype GeopathSegmentEdge {\n  node: GeopathSegment\n  cursor: String!\n}\n\ntype GeopathSource implements Node {\n  id: ID!\n  name: String!\n  description: String!\n  version: String!\n  categories(before: String, after: String, first: Int, last: Int, text: String): GeopathCategoryConnection!\n}\n\ntype GeopathSourceConnection {\n  pageInfo: PageInfo!\n  edges: [GeopathSourceEdge]!\n}\n\ntype GeopathSourceEdge {\n  node: GeopathSource\n  cursor: String!\n}\n\ntype GeopathSubcategory implements Node {\n  id: ID!\n  name: String!\n  description: String!\n  category: GeopathCategory!\n  segments(before: String, after: String, first: Int, last: Int, text: String): GeopathSegmentConnection!\n}\n\ntype GeopathSubcategoryConnection {\n  pageInfo: PageInfo!\n  edges: [GeopathSubcategoryEdge]!\n}\n\ntype GeopathSubcategoryEdge {\n  node: GeopathSubcategory\n  cursor: String!\n}\n\ntype HoldNode implements IdNode {\n  name: String!\n  expiration: Date!\n  start: Date!\n  end: Date!\n  id: ID!\n  unit: UnitNode!\n  proposal: ProposalNode!\n}\n\ntype HoldNodeConnection {\n  pageInfo: PageInfo!\n  edges: [HoldNodeEdge]!\n  totalCount: Int!\n}\n\ntype HoldNodeEdge {\n  node: HoldNode\n  cursor: String!\n}\n\ninterface IdNode {\n  id: ID!\n}\n\ntype ImageChanges {\n  brightness: Int\n  format: String\n  resized: Dimensions\n}\n\nenum ImagePurpose {\n  DYNAMIC\n  STANDARD\n  FALLBACK\n  BACKGROUND\n}\n\ninput ImportAssignmentsInput {\n  units: [UnitInput]!\n  clientMutationId: String\n}\n\ntype ImportAssignmentsPayload {\n  assignments: [AssignmentNode]\n  clientMutationId: String\n}\n\ntype ImpressionsData {\n  spotId: Int\n  frameId: Int\n  plantFrameId: String\n  spotShareOfVoice: Float\n  defaultDistribution: Boolean\n  geopathExactMatch: Boolean\n  periodDays: Int\n  sourceId: Int\n  sourceName: String\n  categoryId: Int\n  categoryName: String\n  subcategoryId: Int\n  subcategoryName: String\n  segmentId: Int\n  segmentName: String\n  baseImpressions: Float\n  targetImpressions: Float\n  trp: Float\n  freqAvg: Float\n  reachPct: Float\n  reachNet: Int\n  indexCompTarget: Float\n  avgImpressionsPerFlip: Float\n  spotLength: Float\n  flipDuration: Float\n  mon: [Float]\n  tue: [Float]\n  wed: [Float]\n  thu: [Float]\n  fri: [Float]\n  sat: [Float]\n  sun: [Float]\n  derivedSpotData: Boolean\n}\n\ninput ImpressionsInputType {\n  min: Float!\n  segmentId: Int = 7166\n  periodDays: Int = 1\n}\n\nscalar JSONString\n\nscalar JsonEncodingType\n\nenum LengthUnit {\n  FOOT\n  METER\n  INCH\n  MILE\n  KILOMETER\n  CENTIMETER\n}\n\ntype Link {\n  linkType: String!\n  url: String!\n  name: String!\n}\n\ntype MessageAvails {\n  units: [MessageAvailsUnit]\n  proposalDates: MessageAvailsDate\n}\n\ntype MessageAvailsDate {\n  start: String\n  end: String\n}\n\ninput MessageAvailsInput {\n  cc: String\n  units: [MessageAvailsUnitInput]\n}\n\ntype MessageAvailsUnit {\n  id: ID!\n  unit: UnitNode\n  available: String\n  start: Date\n  end: Date\n  notes: String\n}\n\ninput MessageAvailsUnitInput {\n  id: ID!\n  available: String!\n  start: Date\n  end: Date\n  notes: String\n}\n\ntype MessageCreative {\n  unitId: ID!\n  unit: UnitNode\n  start: Date!\n  end: Date!\n  permit: Boolean\n  instruction: String\n  tracking: String\n  artworks: [ArtworkReview]!\n}\n\ninput MessageCreativeInput {\n  unitId: ID!\n  start: Date!\n  end: Date!\n  permit: Boolean\n  instruction: String\n  tracking: String\n  artworks: [ArtworkReviewInput]!\n}\n\ntype MessageNode implements IdNode {\n  modified: DateTime!\n  id: ID!\n  idDb: ID\n  parentId: ID\n  recipient: OrganizationNode\n  notes: String\n  type: String\n  hasReplies: Boolean\n  replies: [MessageNode]\n  avails: MessageAvails\n  holds: [ProposalHold]\n  contracts: [ProposalContract]\n  contract: ProposalOrgContractNode\n  proposal: ProposalNode\n  creatives: [MessageCreative]\n  pops: [MessagePOP]\n  status: String\n}\n\ntype MessageNodeConnection {\n  pageInfo: PageInfo!\n  edges: [MessageNodeEdge]!\n  totalCount: Int!\n}\n\ntype MessageNodeEdge {\n  node: MessageNode\n  cursor: String!\n}\n\ntype MessagePOP {\n  unitId: ID!\n  unit: UnitNode\n  start: Date!\n  end: Date!\n  photos: [POP]!\n}\n\ninput MessagePOPInput {\n  unitId: ID!\n  start: Date!\n  end: Date!\n  photos: [POPInput]!\n}\n\ntype ModerationNode implements Node {\n  id: ID!\n}\n\ntype ModerationNodeConnection {\n  pageInfo: PageInfo!\n  edges: [ModerationNodeEdge]!\n  totalCount: Int!\n}\n\ntype ModerationNodeEdge {\n  node: ModerationNode\n  cursor: String!\n}\n\ntype ModerationTagNode implements Node {\n  id: ID!\n  name: String!\n  parentId: ID\n  sort: Int\n}\n\ntype ModerationTagNodeConnection {\n  pageInfo: PageInfo!\n  edges: [ModerationTagNodeEdge]!\n  totalCount: Int!\n}\n\ntype ModerationTagNodeEdge {\n  node: ModerationTagNode\n  cursor: String!\n}\n\nenum Motion {\n  No\n  Full\n  Partial\n}\n\ntype Mutations {\n  createAdImages(input: CreateAdImagesInput!): CreateAdImagesPayload\n  acceptChangesToAdImages(input: AcceptChangesToAdImagesInput!): AcceptChangesToAdImagesPayload\n  deleteAdImages(input: DeleteAdImagesInput!): DeleteAdImagesPayload\n  createAds(input: CreateAdsInput!): CreateAdsPayload\n  updateAds(input: UpdateAdsInput!): UpdateAdsPayload\n  resizeAds(input: ResizeAdsInput!): ResizeAdsPayload\n  createSubscriptions(input: CreateSubscriptionsInput!): CreateSubscriptionsPayload\n  importAssignments(input: ImportAssignmentsInput!): ImportAssignmentsPayload\n  createAssignments(input: CreateAssignmentsInput!): CreateAssignmentsPayload\n  updateAssignments(input: UpdateAssignmentsInput!): UpdateAssignmentsPayload\n  deleteAssignments(input: DeleteAssignmentsInput!): DeleteAssignmentsPayload\n  processUnitSyncEvents(input: ProcessUnitSyncEventsInput!): ProcessUnitSyncEventsPayload\n  syncUnits(input: SyncUnitsInput!): SyncUnitsPayload\n  createUnits(input: CreateUnitsInput!): CreateUnitsPayload\n  updateUnits(input: UpdateUnitsInput!): UpdateUnitsPayload\n  deleteUnits(input: DeleteUnitsInput!): DeleteUnitsPayload\n  createHolds(input: CreateHoldsInput!): CreateHoldsPayload\n  updateHolds(input: UpdateHoldsInput!): UpdateHoldsPayload\n  deleteHolds(input: DeleteHoldsInput!): DeleteHoldsPayload\n  createStoredQueries(input: CreateStoredQueriesInput!): CreateStoredQueriesPayload\n  updateStoredQueries(input: UpdateStoredQueriesInput!): UpdateStoredQueriesPayload\n  deleteStoredQueries(input: DeleteStoredQueriesInput!): DeleteStoredQueriesPayload\n  createProposals(input: CreateProposalsInput!): CreateProposalsPayload\n  updateProposals(input: UpdateProposalsInput!): UpdateProposalsPayload\n  deleteProposals(input: DeleteProposalsInput!): DeleteProposalsPayload\n  createMessages(input: CreateMessagesInput!): CreateMessagesPayload\n  updateMessages(input: UpdateMessagesInput!): UpdateMessagesPayload\n  deleteMessages(input: DeleteMessagesInput!): DeleteMessagesPayload\n  acceptContract(input: AcceptContractInput!): AcceptContractPayload\n  cancelContract(input: CancelContractInput!): CancelContractPayload\n  updateCampaigns(input: UpdateCampaignsInput!): UpdateCampaignsPayload\n  registerMessageToken(input: RegisterMessageTokenInput!): RegisterMessageTokenPayload\n  unregisterMessageToken(input: UnregisterMessageTokenInput!): UnregisterMessageTokenPayload\n  createOrganizations(input: CreateOrganizationsInput!): CreateOrganizationsPayload\n  updateOrganizations(input: UpdateOrganizationsInput!): UpdateOrganizationsPayload\n  deactivateUser(input: DeactivateUserInput!): DeactivateUserPayload\n  updateUser(input: UpdateUserInput!): UpdateUserPayload\n  updateUserRoles(input: UpdateUserRolesInput!): UpdateUserRolesPayload\n  updateUserGroups(input: UpdateUserGroupsInput!): UpdateUserGroupsPayload\n  signPhotoUpdate(signPhotoUpdates: SignPhotoUpdateType): SignPhotoUpdate\n  unitBulkCreate(units: [UnitCreateType]): UnitBulkCreate\n  unitPhotoFromUrl(unitId: String, url: String): UnitPhotoFromUrl\n  unitUpdate(unitUpdates: UnitUpdateType): UnitUpdate\n  createAssignment(color: String!, end: DateTime!, name: String!, reference: String, start: DateTime!, unit: String!, url: String, usedPercent: Int!): CreateAssignment @deprecated(reason: \"Old API, use createAssignments\")\n  updateAssignment(color: String, end: DateTime, id: String!, name: String, reference: String, start: DateTime, url: String, usedPercent: Int): UpdateAssignment @deprecated(reason: \"Old API, use updateAssignments\")\n  removeAssignment(id: String!): RemoveAssignment @deprecated(reason: \"Old API, use removeAssignments\")\n  debug(input: DebugHelperInput!): DebugHelperPayload @deprecated(reason: \"For internal use only\")\n}\n\ninterface Node {\n  id: ID!\n}\n\nenum OrgType {\n  BLIP\n  OPERATOR\n  ADVERTISER\n  MARKETPLACE\n  AGENCY\n  CLIENT\n  ADKOM\n}\n\ntype OrganizationGrapheneType {\n  deleted: DateTime\n  id: ID!\n  name: String!\n  realId: Int\n}\n\ntype OrganizationNode implements IdNode {\n  id: ID!\n  owner: UserNode\n  name: String!\n  roles(before: String, after: String, first: Int, last: Int, user: ID, organization: ID): UserOrgRoleNodeConnection!\n  internal(key: String!): Any\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  parent: OrganizationNode\n  children(before: String, after: String, first: Int, last: Int, text: String, typeIn: [String], parentId: ID, enabled: [String], orgCode: [String]): OrganizationNodeConnection\n  units(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n  preferences: Any\n  type: OrgType\n  cards: [CardNode]\n}\n\ntype OrganizationNodeConnection {\n  pageInfo: PageInfo!\n  edges: [OrganizationNodeEdge]!\n  totalCount: Int!\n}\n\ntype OrganizationNodeEdge {\n  node: OrganizationNode\n  cursor: String!\n}\n\ninput POIInputType {\n  latitude: Float!\n  longitude: Float!\n  distance: Float!\n}\n\ntype POP {\n  closeup: [Photo]\n  webcam: [Photo]\n}\n\ninput POPInput {\n  webcam: [PhotoInput]\n  closeup: [PhotoInput]\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype PaginationResultType {\n  total: Int\n  offset: Int\n  limit: Int\n  order: String\n}\n\ninput PaginationType {\n  limit: Int\n  offset: Int\n  order: String\n}\n\ntype Photo {\n  url: String\n  note: String\n  reupload: Boolean\n}\n\ninput PhotoInput {\n  url: String!\n  note: String\n  reupload: Boolean\n}\n\ntype PointOfInterest {\n  name: String!\n  category: String!\n  distance(units: LengthUnit = 3): Float!\n  latitude: Float!\n  longitude: Float!\n}\n\ninput ProcessUnitSyncEventInput {\n  id: ID!\n  action: String!\n  unitId: ID\n}\n\ninput ProcessUnitSyncEventsInput {\n  events: [ProcessUnitSyncEventInput]!\n  clientMutationId: String\n}\n\ntype ProcessUnitSyncEventsPayload {\n  units: [UnitNode]\n  clientMutationId: String\n}\n\ntype ProposalArtwork {\n  url: String\n  color: String\n}\n\ninput ProposalArtworkInput {\n  url: String\n  color: String\n}\n\ntype ProposalColumn {\n  name: String\n  column: String\n  data: String\n}\n\ninput ProposalColumnInput {\n  name: String\n  column: String\n  data: String\n}\n\ntype ProposalContract {\n  unit: UnitNode\n  unitId: ID!\n  rate: Float!\n  bonusPeriods: Float!\n  productionCost: Float!\n  installationCost: Float!\n  start: Date!\n  end: Date!\n  notes: String\n  state: String\n  internalProduction: Boolean!\n  feeRate: Float!\n}\n\ntype ProposalContractConnection {\n  pageInfo: PageInfo!\n  edges: [ProposalContractEdge]!\n  totalCount: Int!\n}\n\ntype ProposalContractEdge {\n  node: ProposalContract\n  cursor: String!\n}\n\ninput ProposalContractInput {\n  unitId: ID!\n  rate: Float!\n  bonusPeriods: Float!\n  productionCost: Float!\n  installationCost: Float!\n  start: Date!\n  end: Date!\n  notes: String\n  state: String\n  internalProduction: Boolean\n  feeRate: Float\n}\n\ntype ProposalHistory {\n  action: String!\n  date: DateTime!\n  by: UserNode!\n  units(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n  unitIds: [ID]\n  signOwner: OrganizationNode\n}\n\ntype ProposalHold {\n  unit: UnitNode\n  unitId: ID!\n  rate: Float!\n  bonusPeriods: Float!\n  productionCost: Float!\n  installationCost: Float!\n  start: Date!\n  end: Date!\n  notes: String\n  state: String\n  internalProduction: Boolean!\n  feeRate: Float!\n  expiration: Date!\n}\n\ntype ProposalHoldConnection {\n  pageInfo: PageInfo!\n  edges: [ProposalHoldEdge]!\n  totalCount: Int!\n}\n\ntype ProposalHoldEdge {\n  node: ProposalHold\n  cursor: String!\n}\n\ninput ProposalHoldInput {\n  unitId: ID!\n  rate: Float!\n  bonusPeriods: Float!\n  productionCost: Float!\n  installationCost: Float!\n  start: Date!\n  end: Date!\n  notes: String\n  state: String\n  internalProduction: Boolean\n  feeRate: Float\n  expiration: Date!\n}\n\ntype ProposalNode implements IdNode {\n  created: DateTime!\n  modified: DateTime!\n  name: String!\n  start: Date\n  end: Date\n  messages(before: String, after: String, first: Int, last: Int, idIn: [ID], recipient: ID, type: String, topLevel: Boolean, hasReplies: Boolean): MessageNodeConnection\n  id: ID!\n  code: String! @deprecated(reason: \"Used for compatibility with old APIs\")\n  status: String @deprecated(reason: \"Use state\")\n  description: String\n  salesRep: UserNode\n  state: ProposalState!\n  agency: String @deprecated(reason: \"Use agencyOrg\")\n  agencyOrg: OrganizationNode\n  client: String\n  anonymizeClient: Boolean\n  iconUrl: String\n  units(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n  unitIds: [ID]!\n  location: StoredQueryNode\n  columns: [ProposalColumn]\n  history: [ProposalHistory]\n  sort: [ProposalSort]\n  artwork: [ProposalArtwork]\n  query: Any\n  dueDate: DateTime\n  dueDateTimezone: String\n  photoSheet: ProposalPhotoSheet\n  tasks: [ProposalTask]\n  cancelReason: String\n  holds(before: String, after: String, first: Int, last: Int): ProposalHoldConnection\n  contracts(before: String, after: String, first: Int, last: Int): ProposalContractConnection\n}\n\ntype ProposalNodeConnection {\n  pageInfo: PageInfo!\n  edges: [ProposalNodeEdge]!\n  totalCount: Int!\n}\n\ntype ProposalNodeEdge {\n  node: ProposalNode\n  cursor: String!\n}\n\ntype ProposalOrgContractNode implements IdNode {\n  created: DateTime!\n  firstDay: Date!\n  lastDay: Date!\n  total: Float!\n  adkom: Float!\n  standard: Float!\n  early: Float!\n  acceptedOn: DateTime\n  paymentType: String\n  envelopeId: String\n  paymentAmount: Float\n  cancelled: DateTime\n  id: ID!\n  acceptedBy: UserNode\n}\n\ntype ProposalPhotoSheet {\n  url: String\n  created: DateTime\n  googleSheetId: String\n}\n\ninput ProposalPhotoSheetInput {\n  url: String\n  created: DateTime\n  googleSheetId: String\n}\n\ntype ProposalSort {\n  column: String!\n  group: Boolean!\n}\n\ninput ProposalSortInput {\n  column: String\n  group: Boolean\n}\n\nenum ProposalState {\n  InventoryEvaluation\n  ProposalCreation\n  InventoryNegotiation\n  HoldNegotiation\n  ContractNegotiation\n  DesignNegotiation\n  UnderContract\n  ContractComplete\n  Cancelled\n}\n\ntype ProposalTask {\n  state: ProposalState!\n  task: String!\n  completed: DateTime\n}\n\ninput ProposalTaskInput {\n  state: ProposalState!\n  task: String!\n  completed: DateTime\n}\n\ntype Query {\n  moderation(id: ID!): ModerationNode\n  allModerations(before: String, after: String, first: Int, last: Int, orgId: ID!, statusIn: [String]): ModerationNodeConnection\n  moderationTag(id: ID!): ModerationTagNode\n  allModerationTags(before: String, after: String, first: Int, last: Int, name: String, special: String): ModerationTagNodeConnection\n  campaign(id: ID!): CampaignNode\n  allCampaigns(before: String, after: String, first: Int, last: Int, name: String, enabled: Boolean, orgId: ID!, idIn: [ID], current: Boolean): CampaignNodeConnection\n  codeToId(code: ID!, node: String!): CodeIdModel @deprecated(reason: \"Move all APIs to new code\")\n  convertId(gql: ID, code: ID, db: ID, model: String): ConvertIdModel @deprecated(reason: \"For internal use only\")\n  userByCode(code: String!): UserNode\n  userToken: String!\n  organizationByCode(code: String!): OrganizationNode\n  assignmentSearch(criteria: AssignmentSearchParameters, pagination: PaginationType): AssignmentSearch @deprecated(reason: \"Replaced with allAssignments\")\n  signPhotoSearch(criteria: SignPhotoSearchParameters, pagination: PaginationType): SignPhotoSearch\n  unitSearch(criteria: UnitSearchParameters, pagination: PaginationType): UnitSearch @deprecated(reason: \"Use the allUnits query instead\")\n  dma(id: ID!): DMA\n  allDmas(before: String, after: String, first: Int, last: Int, text: String): DMAConnection\n  geopathSource(id: ID!): GeopathSource\n  allGeopathSources(before: String, after: String, first: Int, last: Int, text: String): GeopathSourceConnection\n  geopathCategory(id: ID!): GeopathCategory\n  allGeopathCategories(before: String, after: String, first: Int, last: Int, text: String): GeopathCategoryConnection\n  geopathSubcategory(id: ID!): GeopathSubcategory\n  allGeopathSubcategories(before: String, after: String, first: Int, last: Int, text: String): GeopathSubcategoryConnection\n  geopathSegment(id: ID!): GeopathSegment\n  allGeopathSegments(before: String, after: String, first: Int, last: Int, text: String): GeopathSegmentConnection\n  hold(id: ID!): HoldNode\n  allHolds(before: String, after: String, first: Int, last: Int, idIn: [ID], unitIdIn: [ID], proposalIdIn: [ID]): HoldNodeConnection\n  storedQuery(id: ID!): StoredQueryNode\n  allStoredQueries(before: String, after: String, first: Int, last: Int, name: String, source: String, orgId: ID, orderBy: String): StoredQueryNodeConnection\n  proposal(id: ID!): ProposalNode\n  allProposals(before: String, after: String, first: Int, last: Int, name: String, end: Date, orgId: ID, agency: String, client: String, salesRep: ID, stateIn: [String], orderBy: String): ProposalNodeConnection\n  message(id: ID!): MessageNode\n  allMessages(before: String, after: String, first: Int, last: Int, idIn: [ID], recipient: ID, type: String, topLevel: Boolean, hasReplies: Boolean): MessageNodeConnection\n  marketplaceSubscriptionPlan: [SubscriptionPlanNode]\n  subscription(id: ID!): SubscriptionNode\n  allSubscription: [SubscriptionNode]\n  unitSyncEvent(id: ID!): UnitSyncEventNode\n  allUnitSyncEvents(before: String, after: String, first: Int, last: Int, orgId: ID): UnitSyncEventNodeConnection\n  signGroup(id: ID!): SignGroupNode\n  allSignGroups(before: String, after: String, first: Int, last: Int, orgId: ID, type: String): SignGroupNodeConnection\n  availability(idIn: [ID]!, start: DateTime!, end: DateTime!): [AvailabilityNode]\n  assignment(id: ID!): AssignmentNode\n  allAssignments(before: String, after: String, first: Int, last: Int, unitId: ID!, start: DateTime, end: DateTime): AssignmentNodeConnection\n  unit(id: ID!): UnitNode\n  allUnits(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n  adImage(id: ID!): AdImageNode\n  allAdImages(before: String, after: String, first: Int, last: Int, orgId: ID, verified: Boolean, processed: Boolean): AdImageNodeConnection\n  ad(id: ID!): AdNode\n  allAds(before: String, after: String, first: Int, last: Int, orgId: ID!): AdNodeConnection\n  me: UserNode!\n  user(id: ID!): UserNode\n  allUsers(before: String, after: String, first: Int, last: Int, text: String, orgId: ID!): UserNodeConnection\n  organization(id: ID!): OrganizationNode\n  allOrganizations(before: String, after: String, first: Int, last: Int, text: String, typeIn: [String], parentId: ID, enabled: [String], orgCode: [String]): OrganizationNodeConnection\n}\n\nenum ReadSide {\n  L\n  R\n  C\n}\n\ninput RegisterMessageTokenInput {\n  token: String!\n  clientMutationId: String\n}\n\ntype RegisterMessageTokenPayload {\n  token: String\n  clientMutationId: String\n}\n\nenum RejectionCause {\n  NONE\n  CONTENT\n  DESIGN\n  DISTORTED_ART\n  POOR_DESIGN\n  NO_CLEAR_IDENTITY\n  SEXUALLY_EXPLICIT\n  VERBALLY_EXPLICIT\n  SUBSTANCES\n  PERSONAL_AD\n  POLITICAL_NEGATIVE\n  POLITICAL_NO_PAID_FOR_BY\n  LOCATION_DIVISIVE\n  LOCATION_COMPETITOR\n  AUTOMATIC\n  LEGIBILITY\n  INCORRECT_UPLOAD\n  TEXT_MESSAGE_OR_QR_CODE\n  OTHER\n  MULTIPLE\n}\n\nenum RelativePosition {\n  Top\n  Right\n  Bottom\n  Left\n  Single\n}\n\ntype RemoveAssignment {\n  ok: Boolean\n}\n\ntype Resizable {\n  ad: AdNode\n  sizes: [Size]\n}\n\ninput ResizeAdsInput {\n  adIds: [ID]!\n  unitIds: [ID]!\n  dryRun: Boolean = true\n  clientMutationId: String\n}\n\ntype ResizeAdsPayload {\n  resizableAds: [Resizable]\n  clientMutationId: String\n}\n\nenum SchedulingState {\n  DISABLED\n  SLOTS_ONLY\n  ENABLED\n  STAGING\n}\n\nenum SignEnabled {\n  DISABLED\n  SLOTS_ONLY\n  ENABLED\n  STAGING\n}\n\ntype SignGroupNode implements IdNode {\n  id: ID!\n  name: String\n  autoInclude: Boolean!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  type: SignGroupType\n  units(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n}\n\ntype SignGroupNodeConnection {\n  pageInfo: PageInfo!\n  edges: [SignGroupNodeEdge]!\n  totalCount: Int!\n}\n\ntype SignGroupNodeEdge {\n  node: SignGroupNode\n  cursor: String!\n}\n\nenum SignGroupType {\n  CAMPAIGN\n  MODERATION\n}\n\ninterface SignInterface {\n  id: String\n  name: String\n  displayName: String\n  marketplaceName: String\n  photos: [SignPhotoType]\n  organization: OrganizationGrapheneType\n  timezone: String\n}\n\ntype SignNode implements IdNode {\n  id: ID!\n  height: Int!\n  width: Int!\n  name: String\n  totalSlots: Int!\n  enabled: SignEnabled\n  ordered: Boolean!\n  liveView: String\n  liveViewUsername: String\n  liveViewPassword: String\n  manufacturer: String\n  freezeTime: Time\n  thawTime: Time\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  inactiveSlots: [Int]!\n  booked: Boolean\n  maxMinimumPrice: Float\n  schedulingState: SchedulingState\n  layers: [String]\n  dspLayers: [[String]]\n  dbId: Int\n}\n\ntype SignPhotoNode implements IdNode {\n  id: ID!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  url: String\n  thumbnailUrl: String\n  corners: JsonEncodingType\n  zIndex: Int\n}\n\ntype SignPhotoNodeConnection {\n  pageInfo: PageInfo!\n  edges: [SignPhotoNodeEdge]!\n  totalCount: Int!\n}\n\ntype SignPhotoNodeEdge {\n  node: SignPhotoNode\n  cursor: String!\n}\n\ntype SignPhotoSearch {\n  photos: [SignPhotoType]\n  pagination: PaginationResultType\n}\n\ninput SignPhotoSearchParameters {\n  isPinned: Boolean\n}\n\ntype SignPhotoType {\n  id: ID!\n  corners: JsonEncodingType\n  zIndex: Int\n  realId: Int\n  url: String\n  thumbnailUrl: String\n}\n\ntype SignPhotoUpdate {\n  ok: Boolean\n  signPhoto: SignPhotoType\n}\n\ninput SignPhotoUpdateType {\n  id: String!\n  corners: JSONString\n  zIndex: Int\n}\n\nenum SignPlatform {\n  WINDOWS\n  RASPBERRY_PI\n  LINUX\n  JAVA\n  OTHER\n}\n\ntype Size {\n  width: Int\n  height: Int\n}\n\ntype StoredQueryNode implements IdNode {\n  id: ID!\n  name: String!\n  source: String!\n  updated: DateTime\n  count: Int!\n  distance(units: LengthUnit = 3): Float!\n  pointsOfInterest: [StoredQueryPointOfInterest]\n  postalCodes: [StoredQueryPostalCodes]\n  enabled: [String]\n  units(before: String, after: String, first: Int, last: Int, text: String, idIn: [ID], signIdIn: [ID], orgId: ID, orgIdIn: [ID], orgIdNotIn: [ID], enabled: [String], postalCodeIn: [String], provinceIn: [String], cityIn: [String], poiIn: [POIInputType], location: ID, techTypeIn: [String], dmaIn: [ID], environmentIn: [String], availability: [AvailabilityInputType], mediaTypeIn: [String], read: String, physicalHeight: Float, physicalHeightLte: Float, physicalHeightGte: Float, physicalWidth: Float, physicalWidthLte: Float, physicalWidthGte: Float, aspectRatio: Float, aspectRatioLte: Float, aspectRatioGte: Float, hasPhoto: Boolean, isGeopathAudited: Boolean, impressions: [ImpressionsInputType], exclusionIn: [String], orderBy: String, schedulingStateIn: [String]): UnitNodeConnection\n}\n\ntype StoredQueryNodeConnection {\n  pageInfo: PageInfo!\n  edges: [StoredQueryNodeEdge]!\n  totalCount: Int!\n}\n\ntype StoredQueryNodeEdge {\n  node: StoredQueryNode\n  cursor: String!\n}\n\ninput StoredQueryPOIInput {\n  latitude: Float!\n  longitude: Float!\n  distance: Float\n  name: String\n}\n\ntype StoredQueryPointOfInterest {\n  name: String\n  distance(units: LengthUnit = 3): Float\n  latitude: Float!\n  longitude: Float!\n}\n\ninput StoredQueryPostalCodeInput {\n  postalCode: String!\n  name: String\n}\n\ntype StoredQueryPostalCodes {\n  name: String\n  postalCode: String!\n}\n\nenum SubscriptionInterval {\n  ANY\n  MONTHLY\n  BIMONTHLY\n  QUARTERLY\n  SEMIANNUAL\n  ANNUAL\n  OTHER\n}\n\ntype SubscriptionNode implements IdNode {\n  deleted: DateTime\n  created: DateTime\n  modified: DateTime\n  id: ID!\n  enablePay: Boolean!\n  organization: OrganizationNode\n  plan: SubscriptionPlanNode\n  customCycle: Int\n  notes: String!\n  billDate: DateTime!\n  startDate: DateTime!\n  endDate: DateTime!\n  cycleSpend: Float!\n  lastBilled: DateTime\n  billingAttempts: Int!\n  nextBalance: DateTime\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  organizationId: ID!\n  planId: ID!\n  billingCycle: SubscriptionInterval\n}\n\ntype SubscriptionNodeConnection {\n  pageInfo: PageInfo!\n  edges: [SubscriptionNodeEdge]!\n  totalCount: Int!\n}\n\ntype SubscriptionNodeEdge {\n  node: SubscriptionNode\n  cursor: String!\n}\n\ntype SubscriptionPlanNode {\n  deleted: DateTime\n  created: DateTime!\n  modified: DateTime!\n  id: ID!\n  activeOffer: Boolean\n  customOrg: OrganizationGrapheneType\n  promotionalPercent: Decimal\n  promotionalFixedAmount: Decimal\n  startDate: DateTime\n  endDate: DateTime\n  minimumSpend: Decimal\n  maximumSpend: Decimal\n  artworkCredits: Int\n  artworkCost: Decimal\n  notes: String\n  name: String\n  legacy: Boolean!\n  marketplacePlan: Boolean\n  subscriptionSet(before: String, after: String, first: Int, last: Int): SubscriptionNodeConnection!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  allowedCycle: SubscriptionInterval\n}\n\ninput SyncUnitsInput {\n  clientMutationId: String\n}\n\ntype SyncUnitsPayload {\n  clientMutationId: String\n}\n\nscalar Time\n\ntype UnitBulkCreate {\n  ok: Boolean\n  units: [UnitType]\n}\n\ninput UnitCreateType {\n  adkomEnabled: Boolean\n  adomniEnabled: Boolean\n  blipMarketplaceEnabled: Boolean\n  boardHeight: Decimal\n  boardWidth: Decimal\n  data: JSONString\n  dataPrivate: JSONString\n  displayName: String\n  facing: Direction\n  flipDuration: Float\n  geopathId: String\n  height: Int\n  lat: Decimal\n  lon: Decimal\n  name: String\n  read: ReadSide\n  techType: UnitTechType\n  ordered: Boolean\n  totalSlots: Int\n  vistarEnabled: Boolean\n  hivestackEnabled: Boolean\n  placeExchangeEnabled: Boolean\n  width: Int\n  organization: String!\n}\n\nenum UnitFacing {\n  N\n  NE\n  E\n  SE\n  S\n  SW\n  W\n  NW\n}\n\ninput UnitInput {\n  unitId: ID!\n  start: DateTime!\n  end: DateTime!\n  assignments: [AssignmentInput]!\n}\n\ntype UnitNode implements IdNode {\n  totalSlots: Int!\n  address: String\n  city: String\n  displayName: String\n  geopathId: String\n  postalCode: String\n  province: String\n  county: String\n  timezone: UnitTimezone!\n  id: ID!\n  ordered: Boolean!\n  flipDuration: Float\n  internal(key: String!): Any\n  guid: String\n  ownerName: String\n  name: String!\n  latitude: Float!\n  longitude: Float!\n  gpsLatitude: String!\n  gpsLongitude: String!\n  physicalWidth(units: LengthUnit = 0): Float!\n  physicalHeight(units: LengthUnit = 0): Float!\n  aspectRatio: Float!\n  photo: SignPhotoNode\n  photos(before: String, after: String, first: Int, last: Int): SignPhotoNodeConnection\n  availability(start: DateTime, end: DateTime): AvailabilityNode!\n  dma: DMA\n  impressionsData(targetSegmentId: Int = 7166, periodDays: Int = 1, derivedSpotData: Boolean = false): ImpressionsData\n  enabled(app: String!): Boolean\n  organizationId: ID!\n  organization: OrganizationNode\n  techType: UnitTechType\n  mediaType: String\n  location: String\n  faceCount: Int\n  facing: Direction\n  read: ReadSide\n  adkomRate(computeIfEmpty: Boolean): Float\n  adkomMedia(agencyId: ID, computeIfEmpty: Boolean): Float\n  installationCost: Float\n  productionCost: Float\n  description: String\n  internalNotes: String @deprecated(reason: \"Use internalNotes:internal(\\\\\\\"notes\\\\\\\") instead\")\n  pixelHeight: Int\n  pixelWidth: Int\n  dailyImpressions: Float\n  environment: String\n  cycleType: String\n  recommendedMaterial: String\n  specifications: String\n  extensions: String @deprecated(reason: \"Use extensionAllow instead\")\n  externalId: String\n  productionShipping: String\n  productionLeadTime: String\n  productionContact: String\n  fourWeekRateCard(computeIfEmpty: Boolean): Float\n  pointsOfInterest(category: String): [PointOfInterest]\n  links: [Link]\n  link(linkType: String = \"\"): Link\n  sign: SignNode\n  fourWeekMinimum(computeIfEmpty: Boolean): Float\n  cancellationPolicy: String\n  exclusions: String @deprecated(reason: \"Use exclusion instead\")\n  requiredApproval: String\n  exclusion: [String]\n  illuminated: String @deprecated(reason: \"Use isIlluminated and illuminatedSchedule instead\")\n  isIlluminated: Boolean!\n  illuminatedHours: Float\n  illuminatedSchedule: String\n  relativePosition: RelativePosition\n  motion: Motion\n  alternateFlipDurations: [Float]\n  extensionAllow: Boolean!\n  extensionMaxHeight(units: LengthUnit = 0): Float\n  extensionMaxWidth(units: LengthUnit = 0): Float\n  extensionCost(units: LengthUnit = 0): Float\n  embellishmentAllow: Boolean!\n  embellishmentMaxHeight(units: LengthUnit = 0): Float\n  embellishmentMaxWidth(units: LengthUnit = 0): Float\n  embellishmentCost(units: LengthUnit = 0): Float\n}\n\ntype UnitNodeConnection {\n  pageInfo: PageInfo!\n  edges: [UnitNodeEdge]!\n  totalCount: Int!\n}\n\ntype UnitNodeEdge {\n  node: UnitNode\n  cursor: String!\n}\n\ntype UnitPhotoFromUrl {\n  ok: Boolean\n  unit: UnitType\n}\n\nenum UnitRead {\n  L\n  R\n  C\n}\n\ntype UnitSearch {\n  units: [UnitType]\n  pagination: PaginationResultType\n}\n\ninput UnitSearchParameters {\n  id: String\n  ids: [String]\n  name: String\n  displayName: String\n  anyName: String\n  organization: String\n  adkomEnabled: Boolean\n  blipMarketplaceEnabled: Boolean\n  adomniEnabled: Boolean\n  vistarEnabled: Boolean\n  hivestackEnabled: Boolean\n  placeExchangeEnabled: Boolean\n  postalCodes: [String]\n  provinces: [String]\n  cities: [String]\n  pois: [Float]\n  storedQuery: String\n  techType: String\n}\n\ntype UnitSyncEventNode implements Node {\n  id: ID!\n  type: String!\n  organization: OrganizationNode!\n  apparatixSign: Any\n  candidates: [Candidate]\n  unit: UnitNode\n  fields: [String]\n}\n\ntype UnitSyncEventNodeConnection {\n  pageInfo: PageInfo!\n  edges: [UnitSyncEventNodeEdge]!\n  totalCount: Int!\n}\n\ntype UnitSyncEventNodeEdge {\n  node: UnitSyncEventNode\n  cursor: String!\n}\n\nenum UnitTechType {\n  DIGITAL\n  STATIC\n  TRIVISION\n}\n\nenum UnitTimezone {\n  AFRICA_ABIDJAN\n  AFRICA_ACCRA\n  AFRICA_ADDIS_ABABA\n  AFRICA_ALGIERS\n  AFRICA_ASMARA\n  AFRICA_ASMERA\n  AFRICA_BAMAKO\n  AFRICA_BANGUI\n  AFRICA_BANJUL\n  AFRICA_BISSAU\n  AFRICA_BLANTYRE\n  AFRICA_BRAZZAVILLE\n  AFRICA_BUJUMBURA\n  AFRICA_CAIRO\n  AFRICA_CASABLANCA\n  AFRICA_CEUTA\n  AFRICA_CONAKRY\n  AFRICA_DAKAR\n  AFRICA_DAR_ES_SALAAM\n  AFRICA_DJIBOUTI\n  AFRICA_DOUALA\n  AFRICA_EL_AAIUN\n  AFRICA_FREETOWN\n  AFRICA_GABORONE\n  AFRICA_HARARE\n  AFRICA_JOHANNESBURG\n  AFRICA_JUBA\n  AFRICA_KAMPALA\n  AFRICA_KHARTOUM\n  AFRICA_KIGALI\n  AFRICA_KINSHASA\n  AFRICA_LAGOS\n  AFRICA_LIBREVILLE\n  AFRICA_LOME\n  AFRICA_LUANDA\n  AFRICA_LUBUMBASHI\n  AFRICA_LUSAKA\n  AFRICA_MALABO\n  AFRICA_MAPUTO\n  AFRICA_MASERU\n  AFRICA_MBABANE\n  AFRICA_MOGADISHU\n  AFRICA_MONROVIA\n  AFRICA_NAIROBI\n  AFRICA_NDJAMENA\n  AFRICA_NIAMEY\n  AFRICA_NOUAKCHOTT\n  AFRICA_OUAGADOUGOU\n  AFRICA_PORTO_NOVO\n  AFRICA_SAO_TOME\n  AFRICA_TIMBUKTU\n  AFRICA_TRIPOLI\n  AFRICA_TUNIS\n  AFRICA_WINDHOEK\n  AMERICA_ADAK\n  AMERICA_ANCHORAGE\n  AMERICA_ANGUILLA\n  AMERICA_ANTIGUA\n  AMERICA_ARAGUAINA\n  AMERICA_ARGENTINA_BUENOS_AIRES\n  AMERICA_ARGENTINA_CATAMARCA\n  AMERICA_ARGENTINA_COMODRIVADAVIA\n  AMERICA_ARGENTINA_CORDOBA\n  AMERICA_ARGENTINA_JUJUY\n  AMERICA_ARGENTINA_LA_RIOJA\n  AMERICA_ARGENTINA_MENDOZA\n  AMERICA_ARGENTINA_RIO_GALLEGOS\n  AMERICA_ARGENTINA_SALTA\n  AMERICA_ARGENTINA_SAN_JUAN\n  AMERICA_ARGENTINA_SAN_LUIS\n  AMERICA_ARGENTINA_TUCUMAN\n  AMERICA_ARGENTINA_USHUAIA\n  AMERICA_ARUBA\n  AMERICA_ASUNCION\n  AMERICA_ATIKOKAN\n  AMERICA_ATKA\n  AMERICA_BAHIA\n  AMERICA_BAHIA_BANDERAS\n  AMERICA_BARBADOS\n  AMERICA_BELEM\n  AMERICA_BELIZE\n  AMERICA_BLANC_SABLON\n  AMERICA_BOA_VISTA\n  AMERICA_BOGOTA\n  AMERICA_BOISE\n  AMERICA_BUENOS_AIRES\n  AMERICA_CAMBRIDGE_BAY\n  AMERICA_CAMPO_GRANDE\n  AMERICA_CANCUN\n  AMERICA_CARACAS\n  AMERICA_CATAMARCA\n  AMERICA_CAYENNE\n  AMERICA_CAYMAN\n  AMERICA_CHICAGO\n  AMERICA_CHIHUAHUA\n  AMERICA_CORAL_HARBOUR\n  AMERICA_CORDOBA\n  AMERICA_COSTA_RICA\n  AMERICA_CRESTON\n  AMERICA_CUIABA\n  AMERICA_CURACAO\n  AMERICA_DANMARKSHAVN\n  AMERICA_DAWSON\n  AMERICA_DAWSON_CREEK\n  AMERICA_DENVER\n  AMERICA_DETROIT\n  AMERICA_DOMINICA\n  AMERICA_EDMONTON\n  AMERICA_EIRUNEPE\n  AMERICA_EL_SALVADOR\n  AMERICA_ENSENADA\n  AMERICA_FORT_NELSON\n  AMERICA_FORT_WAYNE\n  AMERICA_FORTALEZA\n  AMERICA_GLACE_BAY\n  AMERICA_GODTHAB\n  AMERICA_GOOSE_BAY\n  AMERICA_GRAND_TURK\n  AMERICA_GRENADA\n  AMERICA_GUADELOUPE\n  AMERICA_GUATEMALA\n  AMERICA_GUAYAQUIL\n  AMERICA_GUYANA\n  AMERICA_HALIFAX\n  AMERICA_HAVANA\n  AMERICA_HERMOSILLO\n  AMERICA_INDIANA_INDIANAPOLIS\n  AMERICA_INDIANA_KNOX\n  AMERICA_INDIANA_MARENGO\n  AMERICA_INDIANA_PETERSBURG\n  AMERICA_INDIANA_TELL_CITY\n  AMERICA_INDIANA_VEVAY\n  AMERICA_INDIANA_VINCENNES\n  AMERICA_INDIANA_WINAMAC\n  AMERICA_INDIANAPOLIS\n  AMERICA_INUVIK\n  AMERICA_IQALUIT\n  AMERICA_JAMAICA\n  AMERICA_JUJUY\n  AMERICA_JUNEAU\n  AMERICA_KENTUCKY_LOUISVILLE\n  AMERICA_KENTUCKY_MONTICELLO\n  AMERICA_KNOX_IN\n  AMERICA_KRALENDIJK\n  AMERICA_LA_PAZ\n  AMERICA_LIMA\n  AMERICA_LOS_ANGELES\n  AMERICA_LOUISVILLE\n  AMERICA_LOWER_PRINCES\n  AMERICA_MACEIO\n  AMERICA_MANAGUA\n  AMERICA_MANAUS\n  AMERICA_MARIGOT\n  AMERICA_MARTINIQUE\n  AMERICA_MATAMOROS\n  AMERICA_MAZATLAN\n  AMERICA_MENDOZA\n  AMERICA_MENOMINEE\n  AMERICA_MERIDA\n  AMERICA_METLAKATLA\n  AMERICA_MEXICO_CITY\n  AMERICA_MIQUELON\n  AMERICA_MONCTON\n  AMERICA_MONTERREY\n  AMERICA_MONTEVIDEO\n  AMERICA_MONTREAL\n  AMERICA_MONTSERRAT\n  AMERICA_NASSAU\n  AMERICA_NEW_YORK\n  AMERICA_NIPIGON\n  AMERICA_NOME\n  AMERICA_NORONHA\n  AMERICA_NORTH_DAKOTA_BEULAH\n  AMERICA_NORTH_DAKOTA_CENTER\n  AMERICA_NORTH_DAKOTA_NEW_SALEM\n  AMERICA_NUUK\n  AMERICA_OJINAGA\n  AMERICA_PANAMA\n  AMERICA_PANGNIRTUNG\n  AMERICA_PARAMARIBO\n  AMERICA_PHOENIX\n  AMERICA_PORT_AU_PRINCE\n  AMERICA_PORT_OF_SPAIN\n  AMERICA_PORTO_ACRE\n  AMERICA_PORTO_VELHO\n  AMERICA_PUERTO_RICO\n  AMERICA_PUNTA_ARENAS\n  AMERICA_RAINY_RIVER\n  AMERICA_RANKIN_INLET\n  AMERICA_RECIFE\n  AMERICA_REGINA\n  AMERICA_RESOLUTE\n  AMERICA_RIO_BRANCO\n  AMERICA_ROSARIO\n  AMERICA_SANTA_ISABEL\n  AMERICA_SANTAREM\n  AMERICA_SANTIAGO\n  AMERICA_SANTO_DOMINGO\n  AMERICA_SAO_PAULO\n  AMERICA_SCORESBYSUND\n  AMERICA_SHIPROCK\n  AMERICA_SITKA\n  AMERICA_ST_BARTHELEMY\n  AMERICA_ST_JOHNS\n  AMERICA_ST_KITTS\n  AMERICA_ST_LUCIA\n  AMERICA_ST_THOMAS\n  AMERICA_ST_VINCENT\n  AMERICA_SWIFT_CURRENT\n  AMERICA_TEGUCIGALPA\n  AMERICA_THULE\n  AMERICA_THUNDER_BAY\n  AMERICA_TIJUANA\n  AMERICA_TORONTO\n  AMERICA_TORTOLA\n  AMERICA_VANCOUVER\n  AMERICA_VIRGIN\n  AMERICA_WHITEHORSE\n  AMERICA_WINNIPEG\n  AMERICA_YAKUTAT\n  AMERICA_YELLOWKNIFE\n  ANTARCTICA_CASEY\n  ANTARCTICA_DAVIS\n  ANTARCTICA_DUMONTDURVILLE\n  ANTARCTICA_MACQUARIE\n  ANTARCTICA_MAWSON\n  ANTARCTICA_MCMURDO\n  ANTARCTICA_PALMER\n  ANTARCTICA_ROTHERA\n  ANTARCTICA_SOUTH_POLE\n  ANTARCTICA_SYOWA\n  ANTARCTICA_TROLL\n  ANTARCTICA_VOSTOK\n  ARCTIC_LONGYEARBYEN\n  ASIA_ADEN\n  ASIA_ALMATY\n  ASIA_AMMAN\n  ASIA_ANADYR\n  ASIA_AQTAU\n  ASIA_AQTOBE\n  ASIA_ASHGABAT\n  ASIA_ASHKHABAD\n  ASIA_ATYRAU\n  ASIA_BAGHDAD\n  ASIA_BAHRAIN\n  ASIA_BAKU\n  ASIA_BANGKOK\n  ASIA_BARNAUL\n  ASIA_BEIRUT\n  ASIA_BISHKEK\n  ASIA_BRUNEI\n  ASIA_CALCUTTA\n  ASIA_CHITA\n  ASIA_CHOIBALSAN\n  ASIA_CHONGQING\n  ASIA_CHUNGKING\n  ASIA_COLOMBO\n  ASIA_DACCA\n  ASIA_DAMASCUS\n  ASIA_DHAKA\n  ASIA_DILI\n  ASIA_DUBAI\n  ASIA_DUSHANBE\n  ASIA_FAMAGUSTA\n  ASIA_GAZA\n  ASIA_HARBIN\n  ASIA_HEBRON\n  ASIA_HO_CHI_MINH\n  ASIA_HONG_KONG\n  ASIA_HOVD\n  ASIA_IRKUTSK\n  ASIA_ISTANBUL\n  ASIA_JAKARTA\n  ASIA_JAYAPURA\n  ASIA_JERUSALEM\n  ASIA_KABUL\n  ASIA_KAMCHATKA\n  ASIA_KARACHI\n  ASIA_KASHGAR\n  ASIA_KATHMANDU\n  ASIA_KATMANDU\n  ASIA_KHANDYGA\n  ASIA_KOLKATA\n  ASIA_KRASNOYARSK\n  ASIA_KUALA_LUMPUR\n  ASIA_KUCHING\n  ASIA_KUWAIT\n  ASIA_MACAO\n  ASIA_MACAU\n  ASIA_MAGADAN\n  ASIA_MAKASSAR\n  ASIA_MANILA\n  ASIA_MUSCAT\n  ASIA_NICOSIA\n  ASIA_NOVOKUZNETSK\n  ASIA_NOVOSIBIRSK\n  ASIA_OMSK\n  ASIA_ORAL\n  ASIA_PHNOM_PENH\n  ASIA_PONTIANAK\n  ASIA_PYONGYANG\n  ASIA_QATAR\n  ASIA_QOSTANAY\n  ASIA_QYZYLORDA\n  ASIA_RANGOON\n  ASIA_RIYADH\n  ASIA_SAIGON\n  ASIA_SAKHALIN\n  ASIA_SAMARKAND\n  ASIA_SEOUL\n  ASIA_SHANGHAI\n  ASIA_SINGAPORE\n  ASIA_SREDNEKOLYMSK\n  ASIA_TAIPEI\n  ASIA_TASHKENT\n  ASIA_TBILISI\n  ASIA_TEHRAN\n  ASIA_TEL_AVIV\n  ASIA_THIMBU\n  ASIA_THIMPHU\n  ASIA_TOKYO\n  ASIA_TOMSK\n  ASIA_UJUNG_PANDANG\n  ASIA_ULAANBAATAR\n  ASIA_ULAN_BATOR\n  ASIA_URUMQI\n  ASIA_UST_NERA\n  ASIA_VIENTIANE\n  ASIA_VLADIVOSTOK\n  ASIA_YAKUTSK\n  ASIA_YANGON\n  ASIA_YEKATERINBURG\n  ASIA_YEREVAN\n  ATLANTIC_AZORES\n  ATLANTIC_BERMUDA\n  ATLANTIC_CANARY\n  ATLANTIC_CAPE_VERDE\n  ATLANTIC_FAEROE\n  ATLANTIC_FAROE\n  ATLANTIC_JAN_MAYEN\n  ATLANTIC_MADEIRA\n  ATLANTIC_REYKJAVIK\n  ATLANTIC_SOUTH_GEORGIA\n  ATLANTIC_ST_HELENA\n  ATLANTIC_STANLEY\n  AUSTRALIA_ACT\n  AUSTRALIA_ADELAIDE\n  AUSTRALIA_BRISBANE\n  AUSTRALIA_BROKEN_HILL\n  AUSTRALIA_CANBERRA\n  AUSTRALIA_CURRIE\n  AUSTRALIA_DARWIN\n  AUSTRALIA_EUCLA\n  AUSTRALIA_HOBART\n  AUSTRALIA_LHI\n  AUSTRALIA_LINDEMAN\n  AUSTRALIA_LORD_HOWE\n  AUSTRALIA_MELBOURNE\n  AUSTRALIA_NSW\n  AUSTRALIA_NORTH\n  AUSTRALIA_PERTH\n  AUSTRALIA_QUEENSLAND\n  AUSTRALIA_SOUTH\n  AUSTRALIA_SYDNEY\n  AUSTRALIA_TASMANIA\n  AUSTRALIA_VICTORIA\n  AUSTRALIA_WEST\n  AUSTRALIA_YANCOWINNA\n  BRAZIL_ACRE\n  BRAZIL_DENORONHA\n  BRAZIL_EAST\n  BRAZIL_WEST\n  CET\n  CST6CDT\n  CANADA_ATLANTIC\n  CANADA_CENTRAL\n  CANADA_EASTERN\n  CANADA_MOUNTAIN\n  CANADA_NEWFOUNDLAND\n  CANADA_PACIFIC\n  CANADA_SASKATCHEWAN\n  CANADA_YUKON\n  CHILE_CONTINENTAL\n  CHILE_EASTERISLAND\n  CUBA\n  EET\n  EST\n  EST5EDT\n  EGYPT\n  EIRE\n  ETC_GMT\n  ETC_GMT_0\n  ETC_GMT_1\n  ETC_GMT_10\n  ETC_GMT_11\n  ETC_GMT_12\n  ETC_GMT_2\n  ETC_GMT_3\n  ETC_GMT_4\n  ETC_GMT_5\n  ETC_GMT_6\n  ETC_GMT_7\n  ETC_GMT_8\n  ETC_GMT_9\n  ETC_GMT_0_404\n  ETC_GMT_1_405\n  ETC_GMT_10_406\n  ETC_GMT_11_407\n  ETC_GMT_12_408\n  ETC_GMT_13\n  ETC_GMT_14\n  ETC_GMT_2_411\n  ETC_GMT_3_412\n  ETC_GMT_4_413\n  ETC_GMT_5_414\n  ETC_GMT_6_415\n  ETC_GMT_7_416\n  ETC_GMT_8_417\n  ETC_GMT_9_418\n  ETC_GMT0\n  ETC_GREENWICH\n  ETC_UCT\n  ETC_UTC\n  ETC_UNIVERSAL\n  ETC_ZULU\n  EUROPE_AMSTERDAM\n  EUROPE_ANDORRA\n  EUROPE_ASTRAKHAN\n  EUROPE_ATHENS\n  EUROPE_BELFAST\n  EUROPE_BELGRADE\n  EUROPE_BERLIN\n  EUROPE_BRATISLAVA\n  EUROPE_BRUSSELS\n  EUROPE_BUCHAREST\n  EUROPE_BUDAPEST\n  EUROPE_BUSINGEN\n  EUROPE_CHISINAU\n  EUROPE_COPENHAGEN\n  EUROPE_DUBLIN\n  EUROPE_GIBRALTAR\n  EUROPE_GUERNSEY\n  EUROPE_HELSINKI\n  EUROPE_ISLE_OF_MAN\n  EUROPE_ISTANBUL\n  EUROPE_JERSEY\n  EUROPE_KALININGRAD\n  EUROPE_KIEV\n  EUROPE_KIROV\n  EUROPE_LISBON\n  EUROPE_LJUBLJANA\n  EUROPE_LONDON\n  EUROPE_LUXEMBOURG\n  EUROPE_MADRID\n  EUROPE_MALTA\n  EUROPE_MARIEHAMN\n  EUROPE_MINSK\n  EUROPE_MONACO\n  EUROPE_MOSCOW\n  EUROPE_NICOSIA\n  EUROPE_OSLO\n  EUROPE_PARIS\n  EUROPE_PODGORICA\n  EUROPE_PRAGUE\n  EUROPE_RIGA\n  EUROPE_ROME\n  EUROPE_SAMARA\n  EUROPE_SAN_MARINO\n  EUROPE_SARAJEVO\n  EUROPE_SARATOV\n  EUROPE_SIMFEROPOL\n  EUROPE_SKOPJE\n  EUROPE_SOFIA\n  EUROPE_STOCKHOLM\n  EUROPE_TALLINN\n  EUROPE_TIRANE\n  EUROPE_TIRASPOL\n  EUROPE_ULYANOVSK\n  EUROPE_UZHGOROD\n  EUROPE_VADUZ\n  EUROPE_VATICAN\n  EUROPE_VIENNA\n  EUROPE_VILNIUS\n  EUROPE_VOLGOGRAD\n  EUROPE_WARSAW\n  EUROPE_ZAGREB\n  EUROPE_ZAPOROZHYE\n  EUROPE_ZURICH\n  GB\n  GB_EIRE\n  GMT\n  GMT_0\n  GMT_0_492\n  GMT0\n  GREENWICH\n  HST\n  HONGKONG\n  ICELAND\n  INDIAN_ANTANANARIVO\n  INDIAN_CHAGOS\n  INDIAN_CHRISTMAS\n  INDIAN_COCOS\n  INDIAN_COMORO\n  INDIAN_KERGUELEN\n  INDIAN_MAHE\n  INDIAN_MALDIVES\n  INDIAN_MAURITIUS\n  INDIAN_MAYOTTE\n  INDIAN_REUNION\n  IRAN\n  ISRAEL\n  JAMAICA\n  JAPAN\n  KWAJALEIN\n  LIBYA\n  MET\n  MST\n  MST7MDT\n  MEXICO_BAJANORTE\n  MEXICO_BAJASUR\n  MEXICO_GENERAL\n  NZ\n  NZ_CHAT\n  NAVAJO\n  PRC\n  PST8PDT\n  PACIFIC_APIA\n  PACIFIC_AUCKLAND\n  PACIFIC_BOUGAINVILLE\n  PACIFIC_CHATHAM\n  PACIFIC_CHUUK\n  PACIFIC_EASTER\n  PACIFIC_EFATE\n  PACIFIC_ENDERBURY\n  PACIFIC_FAKAOFO\n  PACIFIC_FIJI\n  PACIFIC_FUNAFUTI\n  PACIFIC_GALAPAGOS\n  PACIFIC_GAMBIER\n  PACIFIC_GUADALCANAL\n  PACIFIC_GUAM\n  PACIFIC_HONOLULU\n  PACIFIC_JOHNSTON\n  PACIFIC_KANTON\n  PACIFIC_KIRITIMATI\n  PACIFIC_KOSRAE\n  PACIFIC_KWAJALEIN\n  PACIFIC_MAJURO\n  PACIFIC_MARQUESAS\n  PACIFIC_MIDWAY\n  PACIFIC_NAURU\n  PACIFIC_NIUE\n  PACIFIC_NORFOLK\n  PACIFIC_NOUMEA\n  PACIFIC_PAGO_PAGO\n  PACIFIC_PALAU\n  PACIFIC_PITCAIRN\n  PACIFIC_POHNPEI\n  PACIFIC_PONAPE\n  PACIFIC_PORT_MORESBY\n  PACIFIC_RAROTONGA\n  PACIFIC_SAIPAN\n  PACIFIC_SAMOA\n  PACIFIC_TAHITI\n  PACIFIC_TARAWA\n  PACIFIC_TONGATAPU\n  PACIFIC_TRUK\n  PACIFIC_WAKE\n  PACIFIC_WALLIS\n  PACIFIC_YAP\n  POLAND\n  PORTUGAL\n  ROC\n  ROK\n  SINGAPORE\n  TURKEY\n  UCT\n  US_ALASKA\n  US_ALEUTIAN\n  US_ARIZONA\n  US_CENTRAL\n  US_EAST_INDIANA\n  US_EASTERN\n  US_HAWAII\n  US_INDIANA_STARKE\n  US_MICHIGAN\n  US_MOUNTAIN\n  US_PACIFIC\n  US_SAMOA\n  UTC\n  UNIVERSAL\n  W_SU\n  WET\n  ZULU\n}\n\ntype UnitType implements SignInterface {\n  height: Int!\n  width: Int!\n  name: String\n  totalSlots: Int!\n  address: String\n  city: String\n  displayName: String\n  geopathId: String\n  postalCode: String\n  province: String\n  county: String\n  timezone: String\n  id: String\n  ordered: Boolean!\n  flipDuration: Float\n  boardWidth: Float\n  boardHeight: Float\n  facing: Direction\n  lat: Float!\n  lon: Float!\n  organization: OrganizationGrapheneType\n  read: ReadSide\n  vistarEnabled: Boolean!\n  hivestackEnabled: Boolean!\n  placeExchangeEnabled: Boolean!\n  adomniEnabled: Boolean!\n  adkomEnabled: Boolean!\n  blipMarketplaceEnabled: Boolean!\n  data: JsonEncodingType\n  dataPrivate: JsonEncodingType\n  sign: DigitalSignType\n  techType: UnitTechType\n  marketplaceName: String\n  photos: [SignPhotoType]\n}\n\ntype UnitUpdate {\n  ok: Boolean\n  unit: UnitType\n}\n\ninput UnitUpdateType {\n  adkomEnabled: Boolean\n  adomniEnabled: Boolean\n  blipMarketplaceEnabled: Boolean\n  boardHeight: Decimal\n  boardWidth: Decimal\n  data: JSONString\n  dataPrivate: JSONString\n  displayName: String\n  facing: Direction\n  flipDuration: Float\n  geopathId: String\n  height: Int\n  lat: Decimal\n  lon: Decimal\n  name: String\n  read: ReadSide\n  techType: UnitTechType\n  ordered: Boolean\n  totalSlots: Int\n  vistarEnabled: Boolean\n  hivestackEnabled: Boolean\n  placeExchangeEnabled: Boolean\n  width: Int\n  id: String!\n}\n\ninput UnregisterMessageTokenInput {\n  token: String!\n  clientMutationId: String\n}\n\ntype UnregisterMessageTokenPayload {\n  token: String\n  clientMutationId: String\n}\n\ninput UpdateAdInput {\n  id: ID!\n  name: String!\n}\n\ninput UpdateAdsInput {\n  ads: [UpdateAdInput]!\n  clientMutationId: String\n}\n\ntype UpdateAdsPayload {\n  ads: [AdNode]\n  clientMutationId: String\n}\n\ntype UpdateAssignment {\n  ok: Boolean\n  assignment: AssignmentType\n}\n\ninput UpdateAssignmentInput {\n  id: ID!\n  name: String\n  reference: String\n  start: DateTime\n  end: DateTime\n  usedPercent: Int\n  preemptable: Int\n  color: String\n}\n\ninput UpdateAssignmentsInput {\n  assignments: [UpdateAssignmentInput]!\n  clientMutationId: String\n}\n\ntype UpdateAssignmentsPayload {\n  assignments: [AssignmentNode]\n  clientMutationId: String\n}\n\ninput UpdateCampaignInput {\n  id: ID!\n  name: String\n  enabled: Boolean\n  schedule: [[Float]]\n}\n\ninput UpdateCampaignsInput {\n  campaigns: [UpdateCampaignInput]!\n  clientMutationId: String\n}\n\ntype UpdateCampaignsPayload {\n  campaigns: [CampaignNode]\n  clientMutationId: String\n}\n\ninput UpdateHoldInput {\n  id: ID!\n  name: String\n  start: Date\n  end: Date\n  expiration: Date\n}\n\ninput UpdateHoldsInput {\n  holds: [UpdateHoldInput]!\n  clientMutationId: String\n}\n\ntype UpdateHoldsPayload {\n  holds: [HoldNode]\n  clientMutationId: String\n}\n\ninput UpdateMessageInput {\n  id: ID!\n  notes: String\n  cc: [String]\n  avails: MessageAvailsInput\n  holds: [ProposalHoldInput]\n  contracts: [ProposalContractInput]\n  creatives: [MessageCreativeInput]\n  pops: [MessagePOPInput]\n  status: String\n}\n\ninput UpdateMessagesInput {\n  messages: [UpdateMessageInput]!\n  clientMutationId: String\n}\n\ntype UpdateMessagesPayload {\n  messages: [MessageNode]\n  clientMutationId: String\n}\n\ninput UpdateOrganizationInput {\n  id: ID!\n  name: String!\n}\n\ninput UpdateOrganizationsInput {\n  organizations: [UpdateOrganizationInput]!\n  clientMutationId: String\n}\n\ntype UpdateOrganizationsPayload {\n  organizations: [OrganizationNode]\n  clientMutationId: String\n}\n\ninput UpdateProposalInput {\n  id: ID!\n  name: String\n  start: Date\n  end: Date\n  salesRep: ID\n  status: String\n  state: ProposalState\n  description: String\n  agency: String\n  agencyId: ID\n  client: String\n  anonymizeClient: Boolean\n  iconUrl: String\n  unitIds: [ID]\n  location: ID\n  columns: [ProposalColumnInput]\n  sort: [ProposalSortInput]\n  artwork: [ProposalArtworkInput]\n  tasks: [ProposalTaskInput]\n  holds: [ProposalHoldInput]\n  contracts: [ProposalContractInput]\n  dueDate: DateTime\n  dueDateTimezone: String\n  query: JSONString\n  photoSheet: ProposalPhotoSheetInput\n}\n\ninput UpdateProposalsInput {\n  proposals: [UpdateProposalInput]!\n  clientMutationId: String\n}\n\ntype UpdateProposalsPayload {\n  proposals: [ProposalNode]\n  clientMutationId: String\n}\n\ninput UpdateStoredQueriesInput {\n  storedQueries: [UpdateStoredQueryInput]!\n  process: Boolean\n  clientMutationId: String\n}\n\ntype UpdateStoredQueriesPayload {\n  storedQueries: [StoredQueryNode]\n  clientMutationId: String\n}\n\ninput UpdateStoredQueryInput {\n  id: ID!\n  name: String\n  distance: Float\n  pointsOfInterest: [StoredQueryPOIInput]\n  postalCodes: [StoredQueryPostalCodeInput]\n  enabled: [String]\n}\n\ninput UpdateUnitsInput {\n  clientMutationId: String\n}\n\ntype UpdateUnitsPayload {\n  clientMutationId: String\n}\n\ninput UpdateUserGroupsInput {\n  id: ID!\n  groups: [String]!\n  clientMutationId: String\n}\n\ntype UpdateUserGroupsPayload {\n  user: UserNode\n  clientMutationId: String\n}\n\ninput UpdateUserInput {\n  id: ID!\n  firstName: String\n  lastName: String\n  phone: String\n  timezone: String\n  clientMutationId: String\n}\n\ntype UpdateUserPayload {\n  user: UserNode\n  clientMutationId: String\n}\n\ninput UpdateUserRolesInput {\n  id: ID!\n  orgId: ID!\n  roles: [UserRole]!\n  clientMutationId: String\n}\n\ntype UpdateUserRolesPayload {\n  user: UserNode\n  clientMutationId: String\n}\n\nscalar Upload\n\ntype UserNode implements IdNode {\n  id: ID!\n  isSuperuser: Boolean!\n  email: String!\n  firstName: String!\n  lastName: String!\n  phone: String\n  roles(before: String, after: String, first: Int, last: Int, user: ID, organization: ID): UserOrgRoleNodeConnection!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  timezone: String\n  permissions(orgId: ID!): [String]\n  isStaff: Boolean\n  groups: [String]\n}\n\ntype UserNodeConnection {\n  pageInfo: PageInfo!\n  edges: [UserNodeEdge]!\n  totalCount: Int!\n}\n\ntype UserNodeEdge {\n  node: UserNode\n  cursor: String!\n}\n\ntype UserOrgRoleNode implements IdNode {\n  id: ID!\n  user: UserNode!\n  code: String @deprecated(reason: \"Only used for legacy API\")\n  organization: OrganizationNode\n  role: UserRole\n}\n\ntype UserOrgRoleNodeConnection {\n  pageInfo: PageInfo!\n  edges: [UserOrgRoleNodeEdge]!\n  totalCount: Int!\n}\n\ntype UserOrgRoleNodeEdge {\n  node: UserOrgRoleNode\n  cursor: String!\n}\n\nenum UserRole {\n  ADMIN\n  MODERATOR\n  MEMBER\n  BIDDER\n  ANALYST\n  SALES_MGR\n  SALES_STAFF\n  ADVERTISER_REP\n  AVAILABILITY_MGR\n}\n","1","python","opentelemetry","1.11.1","heroku"],["{TraceId=4e28dd6074aff60b3f9b103396c77d71, SpanId=fba3d4308b2c7fa2, RefType=CHILD_OF}"],null,false],[1658241937017,"a45bfb47e0d8d02a","4e28dd6074aff60b3f9b103396c77d71","bbhoarde-staging","HINCRBY",3,865555,["net.transport","service.name","telemetry.sdk.name","telemetry.sdk.version","db.system","telemetry.auto.version","db.statement","telemetry.sdk.language","db.redis.args_length","db.redis.database_index","hosting.provider","net.peer.name","net.peer.port","db.name"],["ip_tcp","bbhoarde-staging","opentelemetry","1.11.1","redis","0.30b1","HINCRBY KillerViews ProfileCRUDView 1","python","4","0","heroku","redis-12680.c16.us-east-1-3.ec2.cloud.redislabs.com","12680","0"],["{TraceId=4e28dd6074aff60b3f9b103396c77d71, SpanId=fba3d4308b2c7fa2, RefType=CHILD_OF}"],null,false]]}]
export const Mock_response = [{
	columns: data[0].columns,
	events: data[0].events.splice(0,5000)
}];